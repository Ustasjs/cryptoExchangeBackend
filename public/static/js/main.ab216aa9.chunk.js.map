{"version":3,"sources":["actions/auth.ts","reducers/auth.ts","actions/currency.ts","reducers/currency.ts","actions/network.ts","reducers/network.ts","actions/user.ts","actions/trade.ts","helpers/dataHandler.ts","reducers/user.ts","reducers/index.ts","localStorage.tsx","api.ts","sagas/auth.ts","sagas/request.ts","sagas/login.ts","sagas/registration.ts","sagas/user.ts","sagas/currency.ts","sagas/trade.ts","sagas/index.ts","store.tsx","components/AuthPage/AuthError/index.tsx","components/AuthPage/AuthForm/index.tsx","components/AuthPage/index.tsx","particles-params.ts","components/PrivateRoute/index.tsx","components/MainPage/Header/index.tsx","components/MainPage/Footer/index.tsx","components/MainPage/ChartSection/Chart/index.tsx","components/MainPage/ChartSection/index.tsx","components/MainPage/Account/index.tsx","components/MainPage/TradeControls/index.tsx","components/MainPage/index.tsx","components/AppRouter/index.tsx","index.tsx","components/MainPage/images/Logo-white.svg","components/AuthPage/images/Logo.svg","components/AuthPage/AuthForm/images/user-shape.svg","components/AuthPage/AuthForm/images/padlock-unlock.svg","components/MainPage/ChartSection/rotateIcon.svg"],"names":["createActions","registrationRequest","registrationSuccess","registrationFailure","loginRequest","loginSuccess","loginFailure","logout","auth","handleActions","_handleActions","Object","defineProperty","toString","state","objectSpread","registrationError","isAuthorized","action","handleRegistrationError","payload","message","loginError","error","keys","map","value","resultValue","toConsumableArray","join","getIsAuthorized","getLoginError","getRegistrationError","fetchBtcRequest","fetchBtcSuccess","fetchBtcFailure","fetchEthRequest","fetchEthSuccess","fetchEthFailure","selectBtc","selectEth","selectOffset","initState","selected","offset","btc","currentPurchasePrice","currentSellPrice","data","max","min","purchase","sell","eth","btcLoadingState","isLoading","isLoaded","ethLoadingState","currency","currency_handleActions","getOffset","getSelected","getBtc","getEth","getBtcLoadingState","getEthLoadingState","setNetworkError","clearNetworkErrors","networkError","network_handleActions","getIsNetworkErrorPresent","userInformationRequest","userInformationSuccess","userInformationFailure","userWalletRequest","userWalletSuccess","userWalletFailure","sellCurrencyRequest","sellCurrencySuccess","sellCurrencyFailure","buyCurrencyRequest","buyCurrencySuccess","buyCurrencyFailure","parseCurrency","numCurrency","toFixed","split","handleInputData","response","handleDataForChart","inputData","dataType","Date","mts","getExtremeValue","typeOfExtreme","sellMax","getMaxValueOfProp","purchaseMax","Math","sellMin","getMinValueOfProp","purchaseMin","Error","result","arr","prop","reduce","prev","current","userInfo","email","userInfoError","wallet","usd","walletError","errorSell","errorBuy","user","user_handleActions","getUserEmail","getErrorSell","getErrorBuy","getParsedUsd","getParsedBtc","getParsedEth","combineReducers","getTokenFromLocalStorage","localStorage","getItem","setTokenToLocalStorage","token","setItem","removeTokenFromLocalStorage","removeItem","axios","defaults","headers","post","instance","create","baseURL","Accept","jsonInstance","Content-Type","setTokenApi","access_token","common","concat","clearTokenApi","undefined","login","_ref2","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","password","wrap","_context","next","sent","abrupt","Promise","reject","stop","_x","apply","this","arguments","registration","_ref4","_callee2","_ref3","_context2","_x2","candles","symbol","get","params","getWallet","getUserInfo","buyCurrency","_ref5","_callee3","_context3","_x3","_x4","sellCurrency","_ref6","_callee4","_context4","_x5","_x6","authFlow","localStorageToken","select","call","put","take","_marked","requestFlow","fn","_len","args","_key","_response","_args","length","Array","t0","status","request_marked","fetchLoginSaga","fetchLoginWatch","jwt","login_marked","takeLatest","_marked2","fetchRegistrationSaga","fetchRegistrationWatch","registration_marked","registration_marked2","fetchUserInfo","fetchUserWallet","fetchUserWatch","user_marked","user_marked2","_marked3","fetchCurrencyFlow","currencyWatch","fetchBtcFlow","fetchEthFlow","fetchBtcWatch","fetchEthWatch","delay","currency_marked","currencyTask","cancel","type","fork","currency_marked2","currency_marked3","_marked4","_context5","_marked5","_context6","_marked6","fetchSellCurrencySaga","fetchBuyCurrencySaga","fetchSellCurrencyWatch","fetchBuyCurrencyWatch","trade_marked","trade_marked2","takeEvery","trade_marked3","trade_marked4","sagas_callee","sagas_marked","sagaMiddleware","createSagaMiddleware","AuthError","props","isLoginStage","inputError","react_default","createElement","className","id","AuthForm","_Component","_getPrototypeOf2","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","handleChange","e","input","target","setState","handleClick","onClick","_this$state","preventDefault","test","inherits","createClass","key","_this$state2","_this$props","src","userShape","alt","placeholder","onChange","lockShape","AuthError_AuthError","Component","particlesParams","particles","number","density","enable","value_area","color","shape","stroke","width","polygon","nb_sides","image","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","shadow","blur","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","fps_limit","AuthPage","authData","handleStatusChangeClick","_this$props2","Redirect","to","logo","AuthPage_AuthForm","particles_default","mapDispatchToProps","connect","PrivateRoute","_PureComponent","component","rest","objectWithoutProperties","Route","assign","render","PureComponent","Header","roundPrices","price","url","currentPriceEth","currentPriceBtc","headerLogo","NavLink","activeClassName","Footer","footerLogo","Chart","chartWidth","chartHeight","isDataLoaded","Fragment","data-value","dist_default","gap","react_chartkick_esm","name","legend","ChartSection","windowWidth","phoneOrientation","checkPhoneOrientation","document","documentElement","clientWidth","window","matchMedia","matches","checkWidth","addEventListener","nextProps","removeEventListener","_this$props$data","rotateIcon","Chart_Chart","Account","TradeControls","currencyInputError","sellInputError","purchaseInputError","sellCost","purchaseCost","handleInputChange","targetKey","firstRelatedKey","secondRelatedKey","firstRelatedValue","secondRelatedValue","targetId","getAttribute","getCurrencyPrice","getCurrencyValue","_objectSpread3","handleInputBlur","errorType","HTMLElement","classList","contains","typeOfValue","typeOfAction","numericValue","Number","_this$props3","newSelected","_this$props4","_this$state3","maxLength","onBlur","toUpperCase","MainPage","handleCurrencyClick","currentTarget","handleOffsetClick","dataset","elements","querySelectorAll","i","add","_this2","match","isBtcLoaded","isEthLoaded","userEmail","usdWallet","btcWallet","ethWallet","MainPage_Header","Account_Account","MainPage_TradeControls","Switch","path","exact","MainPage_ChartSection","MainPage_Footer","AppRouter","components_PrivateRoute","require","store","initialState","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","BrowserRouter","es","components_AppRouter","getElementById","module","exports","__webpack_require__","p"],"mappings":"8cAUIA,YARyB,uBAU3B,uBACA,wBANAC,wBACAC,wBACAC,0BAYEH,YAjBkB,gBAiBW,gBAAiB,gBAAiB,UAJjEI,iBACAC,iBACAC,iBACAC,oBCYWC,EAAOC,aAAaC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EAE5BT,EAAoBY,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAClCG,EADkC,CAErCE,kBAAmB,SAJQL,OAAAC,EAAA,EAAAD,CAAAD,EAM5BR,EAAoBW,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAClCG,EADkC,CAErCG,cAAc,EACdD,kBAAmB,SATQL,OAAAC,EAAA,EAAAD,CAAAD,EAW5BP,EAAoBU,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC7BG,EAD6B,CAEhCG,cAAc,EACdD,kBAAmBG,EACjBD,EAAOE,SAAWF,EAAOE,QAAQC,aAfRV,OAAAC,EAAA,EAAAD,CAAAD,EAkB5BN,EAAaS,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAC3BG,EAD2B,CAE9BQ,WAAY,SApBeX,OAAAC,EAAA,EAAAD,CAAAD,EAsB5BL,EAAaQ,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAC3BG,EAD2B,CAE9BG,cAAc,EACdK,WAAY,SAzBeX,OAAAC,EAAA,EAAAD,CAAAD,EA2B5BJ,EAAaO,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACtBG,EADsB,CAEzBG,cAAc,EACdK,WAAYH,EACVD,EAAOE,SAAWF,EAAOE,QAAQC,aA/BRV,OAAAC,EAAA,EAAAD,CAAAD,EAkC5BH,EAAOM,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACrBG,EADqB,CAExBG,cAAc,MApCaP,GANH,CAC5BO,cAAc,EACdK,WAAY,KACZN,kBAAmB,OA6Cd,SAASG,EACdI,GAEA,OAAKA,EACgB,kBAAVA,EAA2BA,EACtBZ,OAAOa,KAAKD,GAEzBE,IAAI,SAAAC,GACH,IAAMC,EAAcJ,EAAMG,GAC1B,OAAOf,OAAAiB,EAAA,EAAAjB,CAAIgB,GAAaE,KAAK,KAAO,MAErCA,KAAK,KARW,KAWd,UAAMC,EAAkB,SAAChB,GAAD,OAAmBA,EAAMN,KAAKS,cAChDc,EAAgB,SAACjB,GAAD,OAAmBA,EAAMN,KAAKc,YAC9CU,EAAuB,SAAClB,GAAD,OAClCA,EAAMN,KAAKQ,qBCrFThB,YACF,oBACA,oBACA,qBANAiC,oBACAC,oBACAC,sBAWEnC,YACF,oBACA,oBACA,qBANAoC,oBACAC,oBACAC,sBAOoDtC,YACpD,aACA,aACA,iBAHauC,cAAWC,cAAWC,iBCG/BC,EAAY,CAChBC,SAAU,MACVC,OAAQ,KACRC,IAAK,CACHC,qBAAsB,EACtBC,iBAAkB,EAClBC,KAAM,GACNC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,KAAM,IAERC,IAAK,CACHP,qBAAsB,EACtBC,iBAAkB,EAClBC,KAAM,GACNC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,KAAM,IAERE,gBAAiB,CACfC,WAAW,EACXC,UAAU,EACVjC,OAAO,GAETkC,gBAAiB,CACfF,WAAW,EACXC,UAAU,EACVjC,OAAO,IAIEmC,EAAWjD,aAAakD,EAAA,GAAAhD,OAAAC,EAAA,EAAAD,CAAAgD,EAEhCpB,EAAU1B,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACxBG,EADwB,CAE3B6B,SAAU,UAJqBhC,OAAAC,EAAA,EAAAD,CAAAgD,EAMhCnB,EAAU3B,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GACxBG,EADwB,CAE3B6B,SAAU,UARqBhC,OAAAC,EAAA,EAAAD,CAAAgD,EAUhClB,EAAa5B,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACtBG,EADsB,CAEzB8B,OAAQ1B,EAAOE,YAZgBT,OAAAC,EAAA,EAAAD,CAAAgD,EAchC1B,EAAgBpB,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAC9BG,EAD8B,CAEjCwC,gBAAiB,CAAEC,WAAW,EAAMC,UAAU,EAAOjC,OAAO,OAhB7BZ,OAAAC,EAAA,EAAAD,CAAAgD,EAkBhCzB,EAAgBrB,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACzBG,EADyB,CAE5B+B,IAAK3B,EAAOE,QACZkC,gBAAiB,CAAEC,WAAW,EAAOC,UAAU,EAAMjC,OAAO,OArB7BZ,OAAAC,EAAA,EAAAD,CAAAgD,EAuBhCxB,EAAgBtB,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACzBG,EADyB,CAE5BwC,gBAAiB,CAAEC,WAAW,EAAOC,UAAU,EAAMjC,MAAOL,EAAOK,WAzBpCZ,OAAAC,EAAA,EAAAD,CAAAgD,EA2BhCvB,EAAgBvB,WAAa,SAAAC,GAAK,OAAAH,OAAAI,EAAA,EAAAJ,CAAA,GAC9BG,EAD8B,CAEjC2C,gBAAiB,CAAEF,WAAW,EAAMC,UAAU,EAAOjC,OAAO,OA7B7BZ,OAAAC,EAAA,EAAAD,CAAAgD,EA+BhCtB,EAAgBxB,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACzBG,EADyB,CAE5BuC,IAAKnC,EAAOE,QACZqC,gBAAiB,CAAEF,WAAW,EAAOC,UAAU,EAAMjC,OAAO,OAlC7BZ,OAAAC,EAAA,EAAAD,CAAAgD,EAoChCrB,EAAgBzB,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GACzBG,EADyB,CAE5B2C,gBAAiB,CAAEF,WAAW,EAAOC,UAAU,EAAMjC,MAAOL,EAAOK,WAtCpCZ,OAAAC,EAAA,EAAAD,CAAAgD,EAwChCpD,EAAOM,WAAa,kBAAAF,OAAAI,EAAA,EAAAJ,CAAA,GAAY+B,KAxCAiB,GA0CnCjB,GAGWkB,EAAY,SAAC9C,GAAD,OAAmBA,EAAM4C,SAASd,QAC9CiB,EAAc,SAAC/C,GAAD,OAAmBA,EAAM4C,SAASf,UAChDmB,EAAS,SAAChD,GAAD,OAAmBA,EAAM4C,SAASb,KAC3CkB,EAAS,SAACjD,GAAD,OAAmBA,EAAM4C,SAASL,KAC3CW,EAAqB,SAAClD,GAAD,OAChCA,EAAM4C,SAASJ,iBACJW,EAAqB,SAACnD,GAAD,OAChCA,EAAM4C,SAASD,mBC5GsCzD,YACrD,oBACA,wBAFakE,qBAAiBC,wBCKnBC,GAAe3D,aAAa4D,EAAA,GAAA1D,OAAAC,EAAA,EAAAD,CAAA0D,EAEpCH,GAAgBrD,WAAa,SAACC,EAAOI,GAAR,OAC5BA,EAAOE,QAAUF,EAAOE,QAAU,OAHCT,OAAAC,EAAA,EAAAD,CAAA0D,EAIpCF,GAAmBtD,WAAa,kBAAM,OAJFwD,GAHpB,MAYRC,GAA2B,SAACxD,GAAD,OAChB,MAAtBA,EAAMsD,iBCRJpE,YACF,2BACA,2BACA,2BACA,sBACA,sBACA,uBAZAuE,6BACAC,6BACAC,6BACAC,wBACAC,wBACAC,2BCFE5E,YACF,wBACA,wBACA,yBANA6E,0BACAC,0BACAC,6BAWE/E,YACF,uBACA,uBACA,wBANAgF,yBACAC,yBACAC,yBCbK,SAASC,GAAcC,GAC5B,OAAKA,EACEA,EAAYC,QAAQ,GAAGC,MAAM,MADV,GAAGD,QAAQ,GAAGC,MAAM,KAIzC,SAASC,GAAgBC,GAC9B,SAASC,EACPC,EACAC,GAEA,OAAOD,EAAUjE,IACf,SAACC,GAAD,MAA0C,CACxC,IAAIkE,KAAKlE,EAAMmE,KACfnE,EAAMiE,MAKZ,SAASG,EACPJ,EACAK,GAEA,OAAQA,GACN,IAAK,MACH,IAAIC,EAAUC,GAAkBP,EAAW,QACvCQ,EAAcD,GAAkBP,EAAW,YAC/C,OAAOS,KAAKlD,IAAI+C,EAASE,GAAab,QAAQ,GAChD,IAAK,MACH,IAAIe,EAAUC,GAAkBX,EAAW,QACvCY,EAAcD,GAAkBX,EAAW,YAC/C,OAAOS,KAAKjD,IAAIkD,EAASE,GAAajB,QAAQ,GAChD,QACE,MAAM,IAAIkB,MACR,wZAKR,IAAMC,EAAoB,CACxBpD,KAAM,GACND,SAAU,GACVJ,iBAAkB,EAClBD,qBAAsB,EACtBI,IAAK,IACLD,IAAK,IACLD,KAAMwC,EAASxC,KAAKwD,QAStB,OAPAA,EAAOpD,KAAOqC,EAAmBe,EAAOxD,KAAM,QAC9CwD,EAAOrD,SAAWsC,EAAmBe,EAAOxD,KAAM,YAClDwD,EAAOzD,iBAAmByD,EAAOpD,KAAK,GAAG,GACzCoD,EAAO1D,qBAAuB0D,EAAOrD,SAAS,GAAG,GACjDqD,EAAOtD,IAAM4C,EAAgBU,EAAOxD,KAAM,OAC1CwD,EAAOvD,IAAM6C,EAAgBU,EAAOxD,KAAM,OAEnCwD,EAGF,SAASH,GACdI,EACAC,GAKA,OAH0BD,EAAIE,OAAO,SAACC,EAAMC,GAC1C,OAAOA,EAAQH,GAAQE,EAAKF,GAAQG,EAAUD,IAErBF,GAGtB,SAAST,GACdQ,EACAC,GAKA,OAH0BD,EAAIE,OAAO,SAACC,EAAMC,GAC1C,OAAOA,EAAQH,GAAQE,EAAKF,GAAQG,EAAUD,IAErBF,GC5C7B,IAAMhE,GAAY,CAChBoE,SAAU,CACRC,MAAO,IAETC,eAAe,EACfC,OAAQ,CACNC,IAAK,EACLrE,IAAK,EACLQ,IAAK,GAEP8D,aAAa,EACbC,WAAW,EACXC,UAAU,GAGCC,GAAO7G,aAAa8G,EAAA,GAAA5G,OAAAC,EAAA,EAAAD,CAAA4G,EAE5B/C,GAAuB3D,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAChCG,EADgC,CAEnCgG,SAAU5F,EAAOE,QACjB4F,eAAe,MALYrG,OAAAC,EAAA,EAAAD,CAAA4G,EAO5B5C,GAAkB9D,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC3BG,EAD2B,CAE9BmG,OAAQ/F,EAAOE,QACf+F,aAAa,MAVcxG,OAAAC,EAAA,EAAAD,CAAA4G,EAY5B9C,GAAuB5D,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAChCG,EADgC,CAEnCkG,gBAAe9F,EAAOK,OAAQL,EAAOK,UAdVZ,OAAAC,EAAA,EAAAD,CAAA4G,EAgB5B3C,GAAkB/D,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC3BG,EAD2B,CAE9BqG,cAAajG,EAAOK,OAAQL,EAAOK,UAlBRZ,OAAAC,EAAA,EAAAD,CAAA4G,EAoB5BzC,GAAoBjE,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC7BG,EAD6B,CAEhCsG,WAAW,EACXC,UAAU,EACVJ,OAAQ,CACNC,IAAKhG,EAAOE,QAAQ8F,IACpBrE,IAAK3B,EAAOE,QAAQyB,IACpBQ,IAAKnC,EAAOE,QAAQiC,SA3BK1C,OAAAC,EAAA,EAAAD,CAAA4G,EA8B5BxC,GAAoBlE,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC7BG,EAD6B,CAEhCsG,UAAWlG,EAAOE,YAhCST,OAAAC,EAAA,EAAAD,CAAA4G,EAkC5BtC,GAAmBpE,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC5BG,EAD4B,CAE/BsG,WAAW,EACXC,UAAU,EACVJ,OAAQ,CACNC,IAAKhG,EAAOE,QAAQ8F,IACpBrE,IAAK3B,EAAOE,QAAQyB,IACpBQ,IAAKnC,EAAOE,QAAQiC,SAzCK1C,OAAAC,EAAA,EAAAD,CAAA4G,EA4C5BrC,GAAmBrE,WAAa,SAACC,EAAOI,GAAR,OAAAP,OAAAI,EAAA,EAAAJ,CAAA,GAC5BG,EAD4B,CAE/BuG,SAAUnG,EAAOE,YA9CUT,OAAAC,EAAA,EAAAD,CAAA4G,EAgD5BhH,EAAOM,WAAa,kBAAAF,OAAAI,EAAA,EAAAJ,CAAA,GAAY+B,MAhDJ6E,GAkD/B7E,IAGW8E,GAAe,SAAC1G,GAAD,OAAmBA,EAAMwG,KAAKR,SAASC,OACtDU,GAAe,SAAC3G,GAAD,OAAmBA,EAAMwG,KAAKF,WAC7CM,GAAc,SAAC5G,GAAD,OAAmBA,EAAMwG,KAAKD,UAE5CM,GAAe,SAAC7G,GAAD,OAC1BqE,GAAcrE,EAAMwG,KAAKL,OAAOC,MACrBU,GAAe,SAAC9G,GAAD,OAC1BqE,GAAcrE,EAAMwG,KAAKL,OAAOpE,MACrBgF,GAAe,SAAC/G,GAAD,OAC1BqE,GAAcrE,EAAMwG,KAAKL,OAAO5D,MCtGnByE,6BAA8B,CAC3CtH,OACAkD,WACAU,gBACAkD,qCCXK,SAASS,KACd,OAAOC,aAAaC,QAAQ,gBAGvB,SAASC,GAAuBC,GACrCH,aAAaI,QAAQ,eAAgBD,GAGhC,SAASE,KACdL,aAAaM,WAAW,iDCD1BC,KAAMC,SAASC,QAAQC,KAAvB,OAAwC,MAExC,IAAMC,GAAWJ,KAAMK,OAAO,CAC5BC,QALI,IAMJJ,QAAS,CAAEK,OAAQ,SAGfC,GAAeR,KAAMK,OAAO,CAChCC,QAVI,IAWJJ,QAAS,CAAEO,eAAgB,sBAGhBC,GAAc,SAACC,GAC1BP,GAASH,SAASC,QAAQU,OAA1B,wBAAAC,OAA8DF,IAGnDG,GAAgB,WAC3BV,GAASH,SAASC,QAAQU,OAA1B,mBAAoDG,GAGzCC,GAAK,eAAAC,EAAA7I,OAAA8I,GAAA,EAAA9I,CAAA+I,GAAAC,EAAAC,KAAG,SAAAC,EAAAC,GAAA,IAAA/C,EAAAgD,EAAAvE,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,cAASnD,EAAT+C,EAAS/C,MAAOgD,EAAhBD,EAAgBC,SAAhBE,EAAAC,KAAA,EACInB,GAAaL,KAAK,cAAe,CAAE3B,QAAOgD,aAD9C,UAEU,WADvBvE,EADayE,EAAAE,MAENnH,KAAKwD,OAFC,CAAAyD,EAAAC,KAAA,eAAAD,EAAAG,OAAA,SAE0BC,QAAQC,OAAO9E,IAFzC,cAAAyE,EAAAG,OAAA,SAGZ5E,GAHY,wBAAAyE,EAAAM,SAAAV,MAAH,gBAAAW,GAAA,OAAAhB,EAAAiB,MAAAC,KAAAC,YAAA,GAMLC,GAAY,eAAAC,EAAAlK,OAAA8I,GAAA,EAAA9I,CAAA+I,GAAAC,EAAAC,KAAG,SAAAkB,EAAAC,GAAA,IAAAhE,EAAAgD,EAAAvE,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,cAASnD,EAATgE,EAAShE,MAAOgD,EAAhBgB,EAAgBhB,SAAhBiB,EAAAd,KAAA,EACHvB,GAASD,KAC9B,SADqB,SAAAU,OAEZrC,EAFY,cAAAqC,OAEMW,IAHH,UAMG,WALvBvE,EADoBwF,EAAAb,MAMbnH,KAAKwD,OANQ,CAAAwE,EAAAd,KAAA,eAAAc,EAAAZ,OAAA,SAMmBC,QAAQC,OAAO9E,IANlC,cAAAwF,EAAAZ,OAAA,SAOnB5E,GAPmB,wBAAAwF,EAAAT,SAAAO,MAAH,gBAAAG,GAAA,OAAAJ,EAAAJ,MAAAC,KAAAC,YAAA,GAUZO,GAAU,SAACC,EAAgBvI,GAAjB,OACrB+F,GAASyC,IAAI,WAAY,CAAEC,OAAQ,CAAEF,SAAQvI,aAClC0I,GAAY,kBAAM3C,GAASyC,IAAI,kBAE/BG,GAAc,kBAAM5C,GAASyC,IAAI,cAEjCI,GAAW,eAAAC,EAAA9K,OAAA8I,GAAA,EAAA9I,CAAA+I,GAAAC,EAAAC,KAAG,SAAA8B,EAAOhI,EAAkBhC,GAAzB,IAAA8D,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAA2B,GAAA,cAAAA,EAAA/E,KAAA+E,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACFvB,GAASyC,IAAT,yBAAAhC,OACI1F,EADJ,4BAAA0F,OACuC1H,IAFrC,UAII,WAHvB8D,EADmBmG,EAAAxB,MAIZnH,KAAKwD,OAJO,CAAAmF,EAAAzB,KAAA,eAAAyB,EAAAvB,OAAA,SAKhBC,QAAQC,OAAO9E,EAASxC,KAAK3B,UALb,cAAAsK,EAAAvB,OAAA,SAOlB5E,GAPkB,wBAAAmG,EAAApB,SAAAmB,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAhB,MAAAC,KAAAC,YAAA,GAUXmB,GAAY,eAAAC,EAAApL,OAAA8I,GAAA,EAAA9I,CAAA+I,GAAAC,EAAAC,KAAG,SAAAoC,EAAOtI,EAAkBhC,GAAzB,IAAA8D,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAiC,GAAA,cAAAA,EAAArF,KAAAqF,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACHvB,GAASyC,IAAT,yBAAAhC,OACI1F,EADJ,wBAAA0F,OACmC1H,IAFhC,UAIG,WAHvB8D,EADoByG,EAAA9B,MAIbnH,KAAKwD,OAJQ,CAAAyF,EAAA/B,KAAA,eAAA+B,EAAA7B,OAAA,SAKjBC,QAAQC,OAAO9E,EAASxC,KAAK3B,UALZ,cAAA4K,EAAA7B,OAAA,SAOnB5E,GAPmB,wBAAAyG,EAAA1B,SAAAyB,MAAH,gBAAAE,EAAAC,GAAA,OAAAJ,EAAAtB,MAAAC,KAAAC,YAAA,gBCjDRyB,IAAV,SAAUA,KAAV,IAAAnL,EAAAoL,EAAAlE,EAAAjH,EAAA,OAAAwI,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAE2B,OAF3BD,EAAAC,KAAA,EAEiCoC,aAAOxK,GAFxC,OAGsC,OADnCb,EAFHgJ,EAAAE,KAAAF,EAAAC,KAAA,EAG4CqC,aAC7CxE,IAJC,UAGGsE,EAHHpC,EAAAE,KAMChC,EAAgB,GAEflH,EARF,CAAAgJ,EAAAC,KAAA,YASyB,OAAtBmC,QAAoD/C,IAAtB+C,EATjC,CAAApC,EAAAC,KAAA,SAWC,OADA/B,EAAQkE,EAVTpC,EAAAC,KAAA,GAWOqC,aAAKtD,GAAad,GAXzB,QAYC,OAZD8B,EAAAC,KAAA,GAYOsC,aAAInM,EAAa8H,IAZxB,QAAA8B,EAAAC,KAAA,iBAcgB,OAdhBD,EAAAC,KAAA,GAcsBuC,aAAK,CAACpM,EAAcH,IAd1C,QAcOgB,EAdP+I,EAAAE,KAeChC,EAAQjH,EAAOE,QAfhB,QAkBH,OAlBG6I,EAAAC,KAAA,GAkBGqC,aAAKtD,GAAad,GAlBrB,QAmBH,OAnBG8B,EAAAC,KAAA,GAmBGqC,aAAKrE,GAAwBC,GAnBhC,QAoBH,OApBG8B,EAAAC,KAAA,GAoBGsC,aAAIjI,MApBP,QAqBH,OArBG0F,EAAAC,KAAA,GAqBGsC,aAAI9H,MArBP,QAsBH,OAtBGuF,EAAAC,KAAA,GAsBGuC,aAAKlM,GAtBR,QAuBH,OAvBG0J,EAAAC,KAAA,GAuBGqC,aAAKlE,IAvBR,QAwBH,OAxBG4B,EAAAC,KAAA,GAwBGqC,aAAKlD,IAxBR,QAAAY,EAAAC,KAAA,iCAAAD,EAAAM,SAAAmC,qBCPkBC,IAAV,SAAUA,GACvBC,GADa,IAAAC,EAAAC,EAAAC,EAAAvH,EAAAwH,EAAAC,EAAAtC,UAAA,OAAAjB,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,WAAAD,EAAArD,KAAA,EAAAiG,EAAAI,EAAAC,OAEVJ,EAFU,IAAAK,MAAAN,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAEVD,EAFUC,EAAA,GAAAE,EAAAF,GAKM,OALN9C,EAAAC,KAAA,EAKYqC,KAAI9B,WAAJ,GAAKmC,GAALxD,OAAY0D,IALxB,OAMP,OADEtH,EALKyE,EAAAE,KAAAF,EAAAC,KAAA,EAMDoC,aAAOhI,IANN,WAAA2F,EAAAE,KAAA,CAAAF,EAAAC,KAAA,SAMiC,OANjCD,EAAAC,KAAA,GAMuCsC,aAAIrI,MAN3C,eAAA8F,EAAAG,OAAA,SAOJ5E,GAPI,WAAAyE,EAAArD,KAAA,GAAAqD,EAAAmD,GAAAnD,EAAA,YASHzE,EATGyE,EAAAmD,GASH5H,UACK6H,QAAU,KAVZ,CAAApD,EAAAC,KAAA,SAWT,OAXSD,EAAAC,KAAA,GAWHsC,aAAItI,GAAgBsB,IAXjB,cAcLA,EAdK,yBAAAyE,EAAAM,SAAA+C,GAAA,gCCOEC,iBAaAC,IAbV,SAAUD,GAAerM,GAAzB,IAAAsE,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAE6B,OAF7BD,EAAArD,KAAA,EAAAqD,EAAAC,KAAA,EAEmCqC,aACpCI,GACApD,GACArI,EAAOE,SALN,OAOH,OALMoE,EAFHyE,EAAAE,KAAAF,EAAAC,KAAA,EAOGsC,aAAInM,EAAamF,EAASxC,KAAKyK,MAPlC,OAAAxD,EAAAC,KAAA,gBASH,OATGD,EAAArD,KAAA,EAAAqD,EAAAmD,GAAAnD,EAAA,SAAAA,EAAAC,KAAA,GASGsC,aAAIlM,EAAa2J,EAAAmD,GAAMpK,OAT1B,yBAAAiH,EAAAM,SAAAmD,GAAA,cAaA,SAAUF,KAAV,OAAA9D,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,OACL,OADKc,EAAAd,KAAA,EACCyD,aAAWvN,EAAcmN,IAD1B,wBAAAvC,EAAAT,SAAAqD,qBCbUC,iBAaAC,IAbV,SAAUD,GAAsB3M,GAAhC,IAAAsE,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAE6B,OAF7BD,EAAArD,KAAA,EAAAqD,EAAAC,KAAA,EAEmCqC,aACpCI,GACA/B,GACA1J,EAAOE,SALN,OAOH,OALMoE,EAFHyE,EAAAE,KAAAF,EAAAC,KAAA,EAOGsC,aAAItM,EAAoBsF,EAASxC,KAAKyK,MAPzC,OAAAxD,EAAAC,KAAA,gBASH,OATGD,EAAArD,KAAA,EAAAqD,EAAAmD,GAAAnD,EAAA,SAAAA,EAAAC,KAAA,GASGsC,aAAIrM,EAAoB8J,EAAAmD,GAAMpK,OATjC,yBAAAiH,EAAAM,SAAAwD,GAAA,cAaA,SAAUD,KAAV,OAAApE,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,OACL,OADKc,EAAAd,KAAA,EACCyD,aAAW1N,EAAqB4N,IADjC,wBAAA7C,EAAAT,SAAAyD,qBCMUC,iBAQAC,iBASAC,IAjBV,SAAUF,KAAV,IAAAzI,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAEiC,OAFjCD,EAAArD,KAAA,EAAAqD,EAAAC,KAAA,EAEuCqC,aAAKI,GAAapB,IAFzD,OAGH,OADM/F,EAFHyE,EAAAE,KAAAF,EAAAC,KAAA,EAGGsC,aAAIhI,GAAuBgB,EAASxC,KAAKwD,SAH5C,OAAAyD,EAAAC,KAAA,gBAKH,OALGD,EAAArD,KAAA,EAAAqD,EAAAmD,GAAAnD,EAAA,SAAAA,EAAAC,KAAA,GAKGsC,aAAI/H,GAAuBwF,EAAAmD,GAAMpK,OALpC,yBAAAiH,EAAAM,SAAA6D,GAAA,cAQA,SAAUF,KAAV,IAAA1I,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,OAEmC,OAFnCc,EAAApE,KAAA,EAAAoE,EAAAd,KAAA,EAEyCqC,aAAKI,GAAarB,IAF3D,OAGH,OADM9F,EAFHwF,EAAAb,KAAAa,EAAAd,KAAA,EAGGsC,aAAI7H,GAAkBa,EAASxC,KAAKwD,SAHvC,OAAAwE,EAAAd,KAAA,gBAKH,OALGc,EAAApE,KAAA,EAAAoE,EAAAoC,GAAApC,EAAA,SAAAA,EAAAd,KAAA,GAKGsC,aAAI5H,GAAkBoG,EAAAoC,GAAMpK,OAL/B,yBAAAgI,EAAAT,SAAA8D,GAAA,cASA,SAAUF,KAAV,OAAAzE,GAAAC,EAAAK,KAAA,SAAA2B,GAAA,cAAAA,EAAA/E,KAAA+E,EAAAzB,MAAA,OACL,OADKyB,EAAAzB,KAAA,EACCyD,aAAWpJ,GAAwB0J,IADpC,OAEL,OAFKtC,EAAAzB,KAAA,EAECyD,aAAWjJ,GAAmBwJ,IAF/B,wBAAAvC,EAAApB,SAAA+D,qBClBUC,iBAUAC,iBAoBAC,iBAUAC,iBAUAC,iBAIAC,IAtDV,SAAUL,KAAV,IAAA3L,EAAA,OAAA8G,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAEoB,OAFpBD,EAAAC,KAAA,EAE0BoC,aAAO1I,GAFjC,OAGH,OADMhB,EAFHqH,EAAAE,KAAAF,EAAAC,KAAA,EAGGsC,aAAIvK,EAAgBW,IAHvB,OAIH,OAJGqH,EAAAC,KAAA,EAIGsC,aAAIpK,EAAgBQ,IAJvB,OAMH,OANGqH,EAAAC,KAAA,GAMG2E,aAAM,KANT,QAAA5E,EAAAC,KAAA,iCAAAD,EAAAM,SAAAuE,IAUA,SAAUN,KAAV,IAAAO,EAAA7N,EAAA,OAAAwI,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,OAGY,OAHZc,EAAAd,KAAA,EAGkBuC,aAAK,CACxBpM,EACAE,EACAgC,EACAC,EACAC,IARC,UAGGvB,EAHH8J,EAAAb,MAWC4E,EAXD,CAAA/D,EAAAd,KAAA,QAYD,OAZCc,EAAAd,KAAA,EAYK8E,aAAOD,GAZZ,OAaDA,OAAezF,EAbd,UAeCpI,EAAO+N,OAAS1O,EAAOM,WAfxB,CAAAmK,EAAAd,KAAA,SAgBc,OAhBdc,EAAAd,KAAA,GAgBoBgF,aAAKX,IAhBzB,QAgBDQ,EAhBC/D,EAAAb,KAAA,QAAAa,EAAAd,KAAA,iCAAAc,EAAAT,SAAA4E,IAoBA,SAAUV,GAAavN,GAAvB,IAAAsE,EAAAgB,EAAA,OAAAkD,GAAAC,EAAAK,KAAA,SAAA2B,GAAA,cAAAA,EAAA/E,KAAA+E,EAAAzB,MAAA,OAEyB,OAFzByB,EAAA/E,KAAA,EAAA+E,EAAAzB,KAAA,EAE+BqC,aAAKrB,GAAS,MAAOhK,EAAOE,SAF3D,OAIH,OAFMoE,EAFHmG,EAAAxB,KAGG3D,EAAoBjB,GAAgBC,GAHvCmG,EAAAzB,KAAA,EAIGsC,aAAItK,EAAgBsE,IAJvB,OAAAmF,EAAAzB,KAAA,gBAMH,OANGyB,EAAA/E,KAAA,EAAA+E,EAAAyB,GAAAzB,EAAA,SAAAA,EAAAzB,KAAA,GAMGsC,aAAIrK,EAAewJ,EAAAyB,KANtB,yBAAAzB,EAAApB,SAAA6E,GAAA,cAUA,SAAUV,GAAaxN,GAAvB,IAAAsE,EAAAgB,EAAA,OAAAkD,GAAAC,EAAAK,KAAA,SAAAiC,GAAA,cAAAA,EAAArF,KAAAqF,EAAA/B,MAAA,OAEyB,OAFzB+B,EAAArF,KAAA,EAAAqF,EAAA/B,KAAA,EAE+BqC,aAAKrB,GAAS,MAAOhK,EAAOE,SAF3D,OAIH,OAFMoE,EAFHyG,EAAA9B,KAGG3D,EAAoBjB,GAAgBC,GAHvCyG,EAAA/B,KAAA,EAIGsC,aAAInK,EAAgBmE,IAJvB,OAAAyF,EAAA/B,KAAA,gBAMH,OANG+B,EAAArF,KAAA,EAAAqF,EAAAmB,GAAAnB,EAAA,SAAAA,EAAA/B,KAAA,GAMGsC,aAAIlK,EAAe2J,EAAAmB,KANtB,yBAAAnB,EAAA1B,SAAA8E,GAAA,cAUA,SAAUV,KAAV,OAAAjF,GAAAC,EAAAK,KAAA,SAAAsF,GAAA,cAAAA,EAAA1I,KAAA0I,EAAApF,MAAA,OACL,OADKoF,EAAApF,KAAA,EACCyD,aAAW1L,EAAiBwM,IAD7B,wBAAAa,EAAA/E,SAAAgF,IAIA,SAAUX,KAAV,OAAAlF,GAAAC,EAAAK,KAAA,SAAAwF,GAAA,cAAAA,EAAA5I,KAAA4I,EAAAtF,MAAA,OACL,OADKsF,EAAAtF,KAAA,EACCyD,aAAWvL,EAAiBsM,IAD7B,wBAAAc,EAAAjF,SAAAkF,qBC7DUC,iBAWAC,iBAWAC,iBAIAC,IA1BV,SAAUH,GAAsBxO,GAAhC,IAAAwC,EAAAhC,EAAA8D,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OAI4B,OAJ5BD,EAAArD,KAAA,EAEGlD,EAAWxC,EAAOE,QAAQsC,SAC1BhC,EAAQR,EAAOE,QAAQM,MAH1BuI,EAAAC,KAAA,EAIkCqC,aAAKT,GAAcpI,EAAUhC,GAJ/D,OAKH,OADI8D,EAJDyE,EAAAE,KAAAF,EAAAC,KAAA,EAKGsC,aAAI1H,GAAoBU,EAASxC,OALpC,OAAAiH,EAAAC,KAAA,iBAOH,OAPGD,EAAArD,KAAA,GAAAqD,EAAAmD,GAAAnD,EAAA,SAAAA,EAAAC,KAAA,GAOGsC,aAAIzH,GAAmBkF,EAAAmD,KAP1B,yBAAAnD,EAAAM,SAAAuF,GAAA,eAWA,SAAUH,GAAqBzO,GAA/B,IAAAwC,EAAAhC,EAAA8D,EAAA,OAAAkE,GAAAC,EAAAK,KAAA,SAAAgB,GAAA,cAAAA,EAAApE,KAAAoE,EAAAd,MAAA,OAIY,OAJZc,EAAApE,KAAA,EAEGlD,EAAWxC,EAAOE,QAAQsC,SAC1BhC,EAAQR,EAAOE,QAAQM,MAH1BsJ,EAAAd,KAAA,EAIkBqC,aAAKf,GAAa9H,EAAUhC,GAJ9C,OAKH,OADI8D,EAJDwF,EAAAb,KAAAa,EAAAd,KAAA,EAKGsC,aAAIvH,GAAmBO,EAASxC,OALnC,OAAAgI,EAAAd,KAAA,iBAOH,OAPGc,EAAApE,KAAA,GAAAoE,EAAAoC,GAAApC,EAAA,SAAAA,EAAAd,KAAA,GAOGsC,aAAItH,GAAkB8F,EAAAoC,KAPzB,yBAAApC,EAAAT,SAAAwF,GAAA,eAWA,SAAUH,KAAV,OAAAlG,GAAAC,EAAAK,KAAA,SAAA2B,GAAA,cAAAA,EAAA/E,KAAA+E,EAAAzB,MAAA,OACL,OADKyB,EAAAzB,KAAA,EACC8F,aAAUnL,GAAqB6K,IADhC,wBAAA/D,EAAApB,SAAA0F,IAIA,SAAUJ,KAAV,OAAAnG,GAAAC,EAAAK,KAAA,SAAAiC,GAAA,cAAAA,EAAArF,KAAAqF,EAAA/B,MAAA,OACL,OADK+B,EAAA/B,KAAA,EACC8F,aAAUhL,GAAoB2K,IAD/B,wBAAA1D,EAAA1B,SAAA2F,yBCxCQ,SAAAC,KAAA,OAAAzG,GAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAArD,KAAAqD,EAAAC,MAAA,OACb,OADaD,EAAAC,KAAA,EACPgF,aAAK9C,IADE,OAEb,OAFanC,EAAAC,KAAA,EAEPgF,aAAK1B,IAFE,OAGb,OAHavD,EAAAC,KAAA,EAGPgF,aAAKpB,IAHE,OAIb,OAJa7D,EAAAC,KAAA,EAIPgF,aAAKP,IAJE,OAKb,OALa1E,EAAAC,KAAA,GAKPgF,aAAKN,IALE,QAMb,OANa3E,EAAAC,KAAA,GAMPgF,aAAKV,IANE,QAOb,OAPavE,EAAAC,KAAA,GAOPgF,aAAKf,IAPE,QAQb,OARalE,EAAAC,KAAA,GAQPgF,aAAKU,IARE,QASb,OATa3F,EAAAC,KAAA,GASPgF,aAAKW,IATE,yBAAA5F,EAAAM,SAAA6F,0BCFTC,GAAiBC,oICIhB,SAASC,GAAUC,GAAwB,IACxCC,EAA4DD,EAA5DC,aAAcnP,EAA8CkP,EAA9ClP,WAAYN,EAAkCwP,EAAlCxP,kBAAmB0P,EAAeF,EAAfE,WACrD,OACEC,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,aACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBAAiBC,GAAG,cAChCJ,GAA0B,MAE7BC,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBAAiBC,GAAG,aAChCL,EAAenP,EAAaN,uDC4EtB+P,GAxEf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAqG,GAAA,QAAAlE,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAAoQ,IAAAxE,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MACEhM,MAAQ,CACNiG,MAAO,GACPgD,SAAU,GACV2G,WAAY,MAJhBQ,EAmDEI,aAAe,SAACC,GACd,IAAMC,EAAmBD,EAAEE,OAC3BP,EAAKQ,SAAL/Q,OAAAC,EAAA,EAAAD,CAAA,GAAiB6Q,EAAMV,GAAKU,EAAM9P,SArDtCwP,EAwDES,YAAc,SAACJ,GAA2C,IAChDK,EAAYV,EAAKV,MAAjBoB,QADgDC,EAE5BX,EAAKpQ,MAAzBiG,EAFgD8K,EAEhD9K,MAAOgD,EAFyC8H,EAEzC9H,SACfwH,EAAEO,iBAEG,8CAA8CC,KAAKhL,GAEnC,KAAVA,GAA6B,KAAbgD,EACzBmH,EAAKQ,SAAS,CAAEhB,WAAY,oMAE5BQ,EAAKQ,SAAS,CAAEhB,WAAY,OAC5BkB,EAAQ,CAAE7K,QAAOgD,cALjBmH,EAAKQ,SAAS,CAAEhB,WAAY,+EA9DlCQ,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAAoQ,EAAAC,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAAoQ,EAAA,EAAAmB,IAAA,SAAAxQ,MAAA,WAOW,IAAAyQ,EACiCzH,KAAK5J,MAArCiG,EADDoL,EACCpL,MAAOgD,EADRoI,EACQpI,SAAU2G,EADlByB,EACkBzB,WADlB0B,EAEiD1H,KAAK8F,MAArDC,EAFD2B,EAEC3B,aAAcnP,EAFf8Q,EAEe9Q,WAAYN,EAF3BoR,EAE2BpR,kBAClC,OACE2P,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cACdF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,oBACbF,EAAAhH,EAAAiH,cAAA,OAAKyB,IAAKC,KAAWC,IAAI,OAAO1B,UAAU,eAC1CF,EAAAhH,EAAAiH,cAAA,SACEE,GAAG,QACH0B,YAAY,QACZvD,KAAK,QACL4B,UAAU,cACVnP,MAAOqF,EACP0L,SAAU/H,KAAK4G,gBAGnBX,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,oBACbF,EAAAhH,EAAAiH,cAAA,OAAKyB,IAAKK,KAAWH,IAAI,OAAO1B,UAAU,eAC1CF,EAAAhH,EAAAiH,cAAA,SACEE,GAAG,WACH0B,YAAY,WACZvD,KAAK,WACL4B,UAAU,cACVnP,MAAOqI,EACP0I,SAAU/H,KAAK4G,gBAGnBX,EAAAhH,EAAAiH,cAAC+B,GAAD,CACElC,aAAcA,EACdnP,WAAYA,EACZN,kBAAmBA,EACnB0P,WAAYA,IAEdC,EAAAhH,EAAAiH,cAAA,UACE3B,KAAK,SACL4B,UAAU,eACVe,QAASlH,KAAKiH,aAEblB,EAAe,iCAAU,qHA7CpCM,EAAA,CAA8B6B,iCCOxBC,GC7BS,CACbC,UAAW,CACTC,OAAQ,CACNrR,MAAO,GACPsR,QAAS,CACPC,QAAQ,EACRC,WAAY,OAGhBC,MAAO,CACLzR,MAAO,WAET0R,MAAO,CACLnE,KAAM,UACNoE,OAAQ,CACNC,MAAO,EACPH,MAAO,WAETI,QAAS,CACPC,SAAU,GAEZC,MAAO,CACLpB,IAAK,iBACLiB,MAAO,IACPI,OAAQ,MAGZC,QAAS,CACPjS,MAAO,kBACPkS,QAAQ,EACRC,KAAM,CACJZ,QAAQ,EACRa,MAAO,EACPC,YAAa,GACbC,MAAM,IAGVC,KAAM,CACJvS,MAAO,kBACPkS,QAAQ,EACRC,KAAM,CACJZ,QAAQ,EACRa,MAAO,GACPI,SAAU,GACVF,MAAM,IAGVG,YAAa,CACXlB,QAAQ,EACRmB,SAAU,mBACVjB,MAAO,UACPQ,QAAS,kBACTL,MAAO,mBACPe,OAAQ,CACNpB,QAAQ,EACRqB,KAAM,EACNnB,MAAO,YAGXoB,KAAM,CACJtB,QAAQ,EACRa,MAAO,EACPU,UAAW,OACXZ,QAAQ,EACRa,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACP3B,QAAQ,EACR4B,QAAS,mBACTC,QAAS,QAIfC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACPjC,QAAQ,EACRkC,KAAM,QAERC,QAAS,CACPnC,QAAQ,EACRkC,KAAM,QAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJnB,SAAU,IACVD,YAAa,CACXR,QAAS,IAGb6B,OAAQ,CACNpB,SAAU,IACVH,KAAM,GACNwB,SAAU,EACV9B,QAAS,EACTG,MAAO,GAET4B,QAAS,CACPtB,SAAU,IACVqB,SAAU,IAEZE,KAAM,CACJC,aAAc,GAEhBC,OAAQ,CACND,aAAc,KAIpBE,eAAe,EACfC,UAAW,IDnFAC,GAAb,SAAAhF,GAAA,SAAAgF,IAAA,IAAA/E,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAsL,GAAA,QAAAnJ,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAAqV,IAAAzJ,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MACEhM,MAAQ,CACN2P,cAAc,GAFlBS,EA0CES,YAAc,SAACsE,GAAiC,IAAA7D,EACAlB,EAAKV,MAA3CpQ,EADsCgS,EACtChS,aAAcH,EADwBmS,EACxBnS,oBACGiR,EAAKpQ,MAAtB2P,aAEOrQ,EAAa6V,GAAYhW,EAAoBgW,IA9ChE/E,EAiDEgF,wBAA0B,WAAY,IAC5BzF,EAAiBS,EAAKpQ,MAAtB2P,aACRS,EAAKQ,SAAS,CAAEjB,cAAeA,KAnDnCS,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAAqV,EAAAhF,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAAqV,EAAA,EAAA9D,IAAA,SAAAxQ,MAAA,WAKW,IACC+O,EAAiB/F,KAAK5J,MAAtB2P,aADD0F,EAEiDzL,KAAK8F,MAArDlP,EAFD6U,EAEC7U,WAAYN,EAFbmV,EAEanV,kBAEpB,OAJOmV,EAEgClV,aAG9B0P,EAAAhH,EAAAiH,cAACwF,GAAA,EAAD,CAAUC,GAAG,eAGpB1F,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,YACdF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,QACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,cACbF,EAAAhH,EAAAiH,cAAA,OAAKyB,IAAKiE,KAAM/D,IAAI,OAAO1B,UAAU,SACrCF,EAAAhH,EAAAiH,cAAC2F,GAAD,CACE3E,QAASlH,KAAKiH,YACdlB,aAAcA,EACdnP,WAAYA,EACZN,kBAAmBA,KAGvB2P,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,gBACZJ,EACCE,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cAAhB,2FAEAF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cAAhB,wHAEFF,EAAAhH,EAAAiH,cAAA,KAAGC,UAAU,aAAae,QAASlH,KAAKwL,yBACrCzF,EAAe,qEAAgB,oCAItCE,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,aACbF,EAAAhH,EAAAiH,cAAC4F,GAAA7M,EAAD,CAAW0B,OAAQwH,WApC7BmD,EAAA,CAA8BpD,aA4DxB6D,GAAqB,CAAErW,eAAcH,uBAE5ByW,eAPS,SAAC5V,GAAD,MAAoB,CAC1CG,aAAca,EAAgBhB,GAC9BQ,WAAYS,EAAcjB,GAC1BE,kBAAmBgB,EAAqBlB,KAMxC2V,GAFaC,CAGbV,aEpFWW,GAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAhW,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAiM,GAAAhW,OAAAyQ,GAAA,EAAAzQ,CAAA+J,KAAA/J,OAAA0Q,GAAA,EAAA1Q,CAAAgW,GAAAlM,MAAAC,KAAAC,YAAA,OAAAhK,OAAAqR,GAAA,EAAArR,CAAAgW,EAAAC,GAAAjW,OAAAsR,GAAA,EAAAtR,CAAAgW,EAAA,EAAAzE,IAAA,SAAAxQ,MAAA,WACW,IAAA0Q,EACiD1H,KAAK8F,MAArDvP,EADDmR,EACCnR,aAAyB2R,EAD1BR,EACeyE,UAAyBC,EADxCnW,OAAAoW,GAAA,EAAApW,CAAAyR,EAAA,8BAGP,OACEzB,EAAAhH,EAAAiH,cAACoG,GAAA,EAADrW,OAAAsW,OAAA,GACMH,EADN,CAEEI,OAAQ,SAAA1G,GAAK,OACXvP,EAAe0P,EAAAhH,EAAAiH,cAACgC,EAAcpC,GAAYG,EAAAhH,EAAAiH,cAACwF,GAAA,EAAD,CAAUC,GAAG,cARjEM,EAAA,CAAkCQ,iBAenBT,eAAQ,SAAC5V,GAAD,MAAoB,CACzCG,aAAca,EAAgBhB,KADjB4V,CAEXC,2CCkDWS,GAhEf,SAAApG,GAAA,SAAAoG,IAAA,IAAAnG,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAA0M,GAAA,QAAAvK,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAAyW,IAAA7K,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MAwDE6E,YAAc,SAACJ,IAEbhR,EADmB2Q,EAAKV,MAAhBjQ,WAzDZ2Q,EA6DEmG,YAAc,SAACC,GAAD,OAAoBA,EAAQA,EAAMjS,QAAQ,GAAKiS,GA7D/DpG,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAAyW,EAAApG,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAAyW,EAAA,EAAAlF,IAAA,SAAAxQ,MAAA,WACW,IACC6V,EAAQ7M,KAAK8F,MAAb+G,IADDnF,EAEsD1H,KAAK8F,MAA1DoB,EAFDQ,EAECR,QAAS4F,EAFVpF,EAEUoF,gBAAiBC,EAF3BrF,EAE2BqF,gBAAiB1Q,EAF5CqL,EAE4CrL,MACnD,OACE4J,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,UAChBF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,8BACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kCACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,gBACbF,EAAAhH,EAAAiH,cAAA,OAAKyB,IAAKqF,KAAYnF,IAAI,OAAO1B,UAAU,mBAG/CF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,sCACZF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,YACZF,EAAAhH,EAAAiH,cAAC+G,GAAA,EAAD,CACE/F,QAASA,EACTyE,GAAE,GAAAjN,OAAKmO,EAAL,QACF1G,UAAU,iBACVC,GAAG,WACH8G,gBAAgB,yBAEhBjH,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,mBACjCpG,KAAK2M,YAAYI,IAEpB9G,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kBAAf,WAGJF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,YACZF,EAAAhH,EAAAiH,cAAC+G,GAAA,EAAD,CACE/F,QAASA,EACTyE,GAAE,GAAAjN,OAAKmO,EAAL,QACF1G,UAAU,iBACVC,GAAG,WACH8G,gBAAgB,yBAEhBjH,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kBAAkBC,GAAG,mBACjCpG,KAAK2M,YAAYG,IAEpB7G,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kBAAf,YAINF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,mCACZF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,2CAA2C9J,GACzD4J,EAAAhH,EAAAiH,cAAA,MACEC,UAAU,sEACVe,QAASlH,KAAKiH,aAFhB,iBA5CZyF,EAAA,CAA4BxE,oBCGbiF,OAdf,WACE,OACElH,EAAAhH,EAAAiH,cAAA,UAAQC,UAAU,UAChBF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,+BACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,mCACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,gBACbF,EAAAhH,EAAAiH,cAAA,OAAKyB,IAAKyF,KAAYvF,IAAI,OAAO1B,UAAU,4DCOxC,SAASkH,GAAMvH,GAAe,IAEzCwH,EAQExH,EARFwH,WACAC,EAOEzH,EAPFyH,YACAC,EAME1H,EANF0H,aACAhV,EAKEsN,EALFtN,IACAD,EAIEuN,EAJFvN,IACAE,EAGEqN,EAHFrN,SACAC,EAEEoN,EAFFpN,KACAwO,EACEpB,EADFoB,QAEF,OACEjB,EAAAhH,EAAAiH,cAACD,EAAAhH,EAAMwO,SAAP,KACExH,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,qBAAd,uEACAF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,kBACZF,EAAAhH,EAAAiH,cAAA,MACEC,UAAU,qCACVuH,aAAW,KACXxG,QAASA,GAHX,WAOAjB,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,gBAAgBuH,aAAW,KAAKxG,QAASA,GAAvD,WAGAjB,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,gBAAgBuH,aAAW,KAAKxG,QAASA,GAAvD,WAGAjB,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,gBAAgBuH,aAAW,KAAKxG,QAASA,GAAvD,WAGAjB,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,gBAAgBuH,aAAW,KAAKxG,QAASA,GAAvD,YAIFjB,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,eACXqH,EAIE,KAHFvH,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,kBACbF,EAAAhH,EAAAiH,cAACyH,GAAA1O,EAAD,CAASsK,KAAK,OAAOd,MAAM,UAAUmF,IAAK,KAG9C3H,EAAAhH,EAAAiH,cAAA,OACEC,UAAWqH,EAAe,iBAAmB,yBAE7CvH,EAAAhH,EAAAiH,cAAC2H,GAAA,EAAD,CACEvV,KAAM,CACJ,CACEwV,KAAM,6CACNxV,KAAMI,GAER,CACEoV,KAAM,6CACNxV,KAAMG,IAGVD,IAAKA,EACLD,IAAKA,EACLwV,OAAQ,SACRnF,MAAO0E,EACPtE,OAAQuE,sCC4CLS,GApGf,SAAA1H,GAAA,SAAA0H,IAAA,IAAAzH,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAgO,GAAA,QAAA7L,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAA+X,IAAAnM,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MAIEhM,MAAQ,CACNoX,cAAc,EACdS,YAAa,IACbC,iBAAkB,MAPtB1H,EAkEES,YAAc,SAACJ,GAA2C,IAChDK,EAAYV,EAAKV,MAAjBoB,QACRV,EAAKQ,SAAS,CAAEwG,cAAc,IAC9BtG,EAAQL,IArEZL,EAwEE2H,sBAAwB,WACtB,IAAMvF,EAAQwF,SAASC,gBAAgBC,YAC/BJ,EAAqB1H,EAAKpQ,MAA1B8X,iBAENtF,EAAQ,KACR2F,OAAOC,WAAW,2BAA2BC,UAC5CP,GAED1H,EAAKQ,SAAS,CAAEkH,iBAAkB,aAEhCA,GAAoBtF,GAAS,KAC/BpC,EAAKQ,SAAS,CAAEkH,iBAAkB,QAnFxC1H,EAuFEkI,WAAa,WACX,IAAM9F,EAAQwF,SAASC,gBAAgBC,YAC/BL,EAAgBzH,EAAKpQ,MAArB6X,YACJrF,GAAS,KACXpC,EAAKQ,SAAS,CAAEiH,YAAarF,IAG3BA,EAAQ,KAAOqF,EAAc,KAC/BzH,EAAKQ,SAAS,CAAEiH,YAAa,OA/FnCzH,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAA+X,EAAA1H,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAA+X,EAAA,EAAAxG,IAAA,oBAAAxQ,MAAA,YAYI4K,EADmB5B,KAAK8F,MAAhBlE,UAGR2M,OAAOI,iBAAiB,SAAU3O,KAAK0O,YACvCH,OAAOI,iBAAiB,SAAU3O,KAAKmO,uBACvCnO,KAAK0O,aACL1O,KAAKmO,0BAjBT,CAAA3G,IAAA,4BAAAxQ,MAAA,SAoB4B4X,GACHA,EAAb9V,UAENkH,KAAKgH,SAAS,CAAEwG,cAAc,MAvBpC,CAAAhG,IAAA,uBAAAxQ,MAAA,WA4BIuX,OAAOM,oBAAoB,SAAU7O,KAAK0O,YAC1CH,OAAOM,oBAAoB,SAAU7O,KAAKmO,yBA7B9C,CAAA3G,IAAA,SAAAxQ,MAAA,WAgCW,IAAA8X,EAC8B9O,KAAK8F,MAAMxN,KAAxCE,EADDsW,EACCtW,IAAKD,EADNuW,EACMvW,IAAKE,EADXqW,EACWrW,SAAUC,EADrBoW,EACqBpW,KADrByO,EAEiDnH,KAAK5J,MAArDoX,EAFDrG,EAECqG,aAAcS,EAFf9G,EAEe8G,YAAaC,EAF5B/G,EAE4B+G,iBAC7BZ,EAA2B,IAAdW,EAAqB,KAClCV,EAA4B,IAAdU,EAAqB,IAAO,KAEhD,OACEhI,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACS,aAArB+H,EACCjI,EAAAhH,EAAAiH,cAAA,OACEC,UAAU,cACVwB,IAAKoH,KACLlH,IAAI,iOAGN5B,EAAAhH,EAAAiH,cAAC8I,GACK,CACF1B,aACAC,cACAC,eACAU,mBACA1V,MACAD,MACAE,WACAC,OACAwO,QAASlH,KAAKiH,cAIpBhB,EAAAhH,EAAAiH,cAAA,gBA7DR8H,EAAA,CAAkC9F,oBCVnB,SAAS+G,GAAQnJ,GAAsB,IAC5CtJ,EAAkBsJ,EAAlBtJ,IAAKrE,EAAa2N,EAAb3N,IAAKQ,EAAQmN,EAARnN,IAClB,OACEsN,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,WACbF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,uBAAd,+CACAF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,iBACZF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,iBACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,kBAAkBhO,EAAI,IACtC8N,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cAAhB,KACAF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,mBAAmBhO,EAAI,KAEzC8N,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,qBAAf,QAEFF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,iBACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,kBAAkBxN,EAAI,IACtCsN,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cAAhB,KACAF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,mBAAmBxN,EAAI,KAEzCsN,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,qBAAf,QAEFF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,iBACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,kBAAkB3J,EAAI,IACtCyJ,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,cAAhB,KACAF,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,mBAAmB3J,EAAI,KAEzCyJ,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,qBAAf,mBCPG+I,GAAb,SAAA5I,GAAA,SAAA4I,IAAA,IAAA3I,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAkP,GAAA,QAAA/M,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAAiZ,IAAArN,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MAIEhM,MAAQ,CACNa,YAAa,GACb+O,YAAY,EACZmJ,oBAAoB,EACpBC,gBAAgB,EAChBC,oBAAoB,EACpBC,SAAU,GACVC,aAAc,IAXlB/I,EAsIEgJ,kBAAoB,SAAC3I,GAA2C,IAI1D4I,EACAC,EACAC,EACAC,EACAC,EAPI5X,EAAauO,EAAKV,MAAlB7N,SACFjB,EAAQ6P,EAAEE,OAAO/P,MACjB8Y,EAAWjJ,EAAEE,OAAOgJ,aAAa,MAOvC,OAAQD,GACN,IAAK,WACHL,EAAY,cACZC,EAAkB,WAClBC,EAAmB,eACnBC,EAAoBpJ,EAAKwJ,iBAAiBhZ,EAAOiB,EAAU,QAC3D4X,EAAqBrJ,EAAKwJ,iBAAiBhZ,EAAOiB,EAAU,YAC5D,MACF,IAAK,OACHwX,EAAY,WACZC,EAAkB,cAClBC,EAAmB,eACnBC,EAAoBpJ,EAAKyJ,iBAAiBjZ,EAAOiB,EAAU6X,GAC3DD,EAAqBrJ,EAAKwJ,iBACxBJ,EACA3X,EACA,YAEF,MACF,IAAK,WACHwX,EAAY,eACZC,EAAkB,cAClBC,EAAmB,WACnBC,EAAoBpJ,EAAKyJ,iBAAiBjZ,EAAOiB,EAAU6X,GAC3DD,EAAqBrJ,EAAKwJ,iBACxBJ,EACA3X,EACA,QAEF,MACF,QACE,OAGJuO,EAAKQ,SAAL/Q,OAAAI,EAAA,EAAAJ,CAAA,GAAmBuQ,EAAKpQ,MAAxBH,OAAAC,EAAA,EAAAD,CAAA,GAAgCwZ,EAAYzY,IAAS,WACK,IAAAkZ,GAApD,uBAAuB7I,KAAKrQ,IAAoB,KAAVA,IACxCwP,EAAKQ,SAAL/Q,OAAAI,EAAA,EAAAJ,CAAA,GACKuQ,EAAKpQ,OADV8Z,EAAA,GAAAja,OAAAC,EAAA,EAAAD,CAAAia,EAEGR,EAAkBE,GAFrB3Z,OAAAC,EAAA,EAAAD,CAAAia,EAGGP,EAAmBE,GAHtB5Z,OAAAC,EAAA,EAAAD,CAAAia,EAAA,cAIc,GAJdja,OAAAC,EAAA,EAAAD,CAAAia,EAAA,sBAKsB,GALtBja,OAAAC,EAAA,EAAAD,CAAAia,EAAA,kBAMkB,GANlBja,OAAAC,EAAA,EAAAD,CAAAia,EAAA,sBAOsB,GAPtBA,QApLR1J,EAiME2J,gBAAkB,SAACtJ,GACjB,IAEIuJ,EAFEpZ,EAAQ6P,EAAEE,OAAO/P,MAOvB,OANiB6P,EAAEE,OAAOgJ,aAAa,OAOrC,IAAK,WACHK,EAAY,qBACZ,MACF,IAAK,OACHA,EAAY,iBACZ,MACF,IAAK,WACHA,EAAY,qBACZ,MACF,QACE,OAGC,uBAAuB/I,KAAKrQ,IAAoB,KAAVA,EAOzCwP,EAAKQ,SAAL/Q,OAAAI,EAAA,EAAAJ,CAAA,GACKuQ,EAAKpQ,MADVH,OAAAC,EAAA,EAAAD,CAAA,CAEE+P,YAAY,GACXoK,GAAY,KATf5J,EAAKQ,SAAL/Q,OAAAI,EAAA,EAAAJ,CAAA,GACKuQ,EAAKpQ,MADVH,OAAAC,EAAA,EAAAD,CAAA,CAEE+P,WAAY,4JACXoK,GAAY,MA3NrB5J,EAsOES,YAAc,SAACJ,GACb,GAAMA,EAAEE,kBAAkBsJ,YAA1B,CADwD,IAAAlJ,EAIpBX,EAAKpQ,MAAjCa,EAJgDkQ,EAIhDlQ,YAAa+O,EAJmCmB,EAInCnB,WAJmC0B,EAKMlB,EAAKV,MAA3D7N,EALgDyP,EAKhDzP,SAAUkC,EALsCuN,EAKtCvN,oBAAqBG,EALiBoN,EAKjBpN,mBACjC5D,EAAU,CAAEsC,SAAUf,EAAUjB,MAAOC,IACzC+O,GAAe/O,IAEf4P,EAAEE,OAAOuJ,UAAUC,SAAS,wBAC9BpW,EAAoBzD,GAEpB4D,EAAmB5D,MAlPzB8P,EAsPEwJ,iBAAmB,SACjBhZ,EACAwZ,EACAC,GACG,IAAAhF,EACkBjF,EAAKV,MAAlB3N,EADLsT,EACKtT,IAAKQ,EADV8S,EACU9S,IAEb,IAAK3B,IAAUmB,EAAIE,mBAAqBM,EAAIN,iBAC1C,MAAO,GAGT,GAAqB,SAAjBoY,GAA4C,aAAjBA,EAC7B,MAAM,IAAI5U,MAAM,yKAElB,IAAM6U,EAAeC,OAAO3Z,GAC5B,OAAQwZ,GACN,IAAK,MACH,MAAwB,SAAjBC,GACFC,EAAevY,EAAIE,kBAAkBsC,QAAQ,IAC7C+V,EAAevY,EAAIC,sBAAsBuC,QAAQ,GACxD,IAAK,MACH,MAAwB,SAAjB8V,GACFC,EAAe/X,EAAIN,kBAAkBsC,QAAQ,IAC7C+V,EAAe/X,EAAIP,sBAAsBuC,QAAQ,GACxD,QACE,MAAM,IAAIkB,MAAM,mJA/QxB2K,EAmREyJ,iBAAmB,SACjBjZ,EACAwZ,EACAC,GACG,IAAAG,EACkBpK,EAAKV,MAAlB3N,EADLyY,EACKzY,IAAKQ,EADViY,EACUjY,IACb,IAAK3B,EAAO,MAAO,GAEnB,GAAqB,SAAjByZ,GAA4C,aAAjBA,EAC7B,MAAM,IAAI5U,MAAM,yKAElB,IAAM6U,EAAeC,OAAO3Z,GAC5B,OAAQwZ,GACN,IAAK,MACH,MAAwB,SAAjBC,GACFC,EAAevY,EAAIE,kBAAkBsC,QAAQ,IAC7C+V,EAAevY,EAAIC,sBAAsBuC,QAAQ,GACxD,IAAK,MACH,MAAwB,SAAjB8V,GACFC,EAAe/X,EAAIN,kBAAkBsC,QAAQ,IAC7C+V,EAAe/X,EAAIP,sBAAsBuC,QAAQ,GACxD,QACE,MAAM,IAAIkB,MAAM,mJAzSxB2K,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAAiZ,EAAA5I,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAAiZ,EAAA,EAAA1H,IAAA,4BAAAxQ,MAAA,SAc4B4X,GAAgC,IAAAnH,EACpBzH,KAAK5J,MAAjCa,EADgDwQ,EAChDxQ,YAAa+O,EADmCyB,EACnCzB,WACb/N,EAAa+H,KAAK8F,MAAlB7N,SACF4Y,EAAcjC,EAAU3W,SAC1BA,IAAa2W,EAAU3W,UAAa+N,GACtChG,KAAKgH,SAAL/Q,OAAAI,EAAA,EAAAJ,CAAA,GACK+J,KAAK5J,MADV,CAEEkZ,SAAUtP,KAAKgQ,iBAAiB/Y,EAAa4Z,EAAa,QAC1DtB,aAAcvP,KAAKgQ,iBACjB/Y,EACA4Z,EACA,iBAzBV,CAAArJ,IAAA,SAAAxQ,MAAA,WA+BW,IAAA8Z,EACmC9Q,KAAK8F,MAAvC7N,EADD6Y,EACC7Y,SAAUyE,EADXoU,EACWpU,UAAWC,EADtBmU,EACsBnU,SADtBoU,EAUH/Q,KAAK5J,MAPPa,EAHK8Z,EAGL9Z,YACAqY,EAJKyB,EAILzB,SACAC,EALKwB,EAKLxB,aACAvJ,EANK+K,EAML/K,WACAmJ,EAPK4B,EAOL5B,mBACAC,EARK2B,EAQL3B,eACAC,EATK0B,EASL1B,mBAEF,OACEpJ,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,YACbF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,wBAAd,6FACCH,GACCC,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,mBAAmBH,MAInCtJ,IAAaC,IACZsJ,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,yCAAf,uHAMFF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,kBACZF,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,WACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,SACE8K,UAAW,GACXzM,KAAK,OACL4B,UACE,iCACCgJ,EAAqB,sBAAwB,IAEhDnY,MAAOC,EACPmP,GAAG,WACH2B,SAAU/H,KAAKwP,kBACfyB,OAAQjR,KAAKmQ,kBAEflK,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,eAAelO,EAASiZ,kBAI9CjL,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,WACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,SACE8K,UAAW,GACXzM,KAAK,OACL4B,UACE,iCACCkJ,EAAqB,sBAAwB,IAEhDrY,MAAOuY,EACPnJ,GAAG,WACH2B,SAAU/H,KAAKwP,kBACfyB,OAAQjR,KAAKmQ,kBAEflK,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,eAAhB,MAEFF,EAAAhH,EAAAiH,cAAA,UACE3B,KAAK,SACL4B,UAAU,uCACVe,QAASlH,KAAKiH,aAHhB,gDASJhB,EAAAhH,EAAAiH,cAAA,MAAIC,UAAU,WACZF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,iBACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,SACbF,EAAAhH,EAAAiH,cAAA,SACE8K,UAAW,GACXzM,KAAK,OACL4B,UACE,iCACCiJ,EAAiB,sBAAwB,IAE5CpY,MAAOsY,EACPlJ,GAAG,OACH2B,SAAU/H,KAAKwP,kBACfyB,OAAQjR,KAAKmQ,kBAEflK,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,eAAhB,MAEFF,EAAAhH,EAAAiH,cAAA,UACE3B,KAAK,SACL4B,UAAU,sCACVe,QAASlH,KAAKiH,aAHhB,gDAxHdiI,EAAA,CAAmChH,aAqT7B6D,GAAqB,CACzB5R,uBACAG,uBAGa0R,eAZS,SAAC5V,GAAD,MAAoB,CAC1C6B,SAAUkB,EAAY/C,GACtB+B,IAAKiB,EAAOhD,GACZuC,IAAKU,EAAOjD,GACZsG,UAAWK,GAAa3G,GACxBuG,SAAUK,GAAY5G,KAStB2V,GAFaC,CAGbkD,IC3TWiC,WAAb,SAAA7K,GAAA,SAAA6K,IAAA,IAAA5K,EAAAC,EAAAvQ,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAAmR,GAAA,QAAAhP,EAAAlC,UAAAuC,OAAAJ,EAAA,IAAAK,MAAAN,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAAD,EAAAC,GAAApC,UAAAoC,GAAA,OAAAmE,EAAAvQ,OAAAyQ,GAAA,EAAAzQ,CAAA+J,MAAAuG,EAAAtQ,OAAA0Q,GAAA,EAAA1Q,CAAAkb,IAAAtP,KAAA9B,MAAAwG,EAAA,CAAAvG,MAAAtB,OAAA0D,MA4EEgP,oBAAsB,SAACvK,GAA2C,IAAAa,EAC/BlB,EAAKV,MAA9BjO,EADwD6P,EACxD7P,UAAWC,EAD6C4P,EAC7C5P,UAED,aADA+O,EAAEwK,cAActB,aAAa,MAE7ClY,IAEAC,KAlFN0O,EAsFE8K,kBAAoB,SAACzK,GACnB,GAAMA,EAAEE,kBAAkBsJ,YAA1B,CAD8D,IAItDtY,EAAiByO,EAAKV,MAAtB/N,aACFf,EAAQ6P,EAAEE,OAAOwK,QAAQva,MACzBwa,EAAWpD,SAASqD,iBAAiB,gBAC3C,GAAIza,EAAO,CACTe,EAAaf,GACb,IAAK,IAAI0a,EAAI,EAAGA,EAAIF,EAAShP,OAAQkP,IAC/BF,EAASE,GAAGpB,UAAUC,SAAS,yBACjCiB,EAASE,GAAGpB,UAAUnF,OAAO,wBAGjCtE,EAAEE,OAAOuJ,UAAUqB,IAAI,2BApG7BnL,EAAA,OAAAvQ,OAAAqR,GAAA,EAAArR,CAAAkb,EAAA7K,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAAkb,EAAA,EAAA3J,IAAA,SAAAxQ,MAAA,WAGW,IAAA4a,EAAA5R,KACC6M,EAAQ7M,KAAK8F,MAAM+L,MAAnBhF,IADDpB,EAcHzL,KAAK8F,MAXP3N,EAHKsT,EAGLtT,IACAQ,EAJK8S,EAIL9S,IAC6BmZ,EALxBrG,EAKL7S,gBAAmBE,SACUiZ,EANxBtG,EAML1S,gBAAmBD,SACnBkZ,EAPKvG,EAOLuG,UACAC,EARKxG,EAQLwG,UACAC,EATKzG,EASLyG,UACAC,EAVK1G,EAUL0G,UACAta,EAXK4T,EAWL5T,UACAC,EAZK2T,EAYL3T,UACAjC,EAbK4V,EAaL5V,OAEIkX,EAAkB5U,EAAIE,iBACtByU,EAAkBnU,EAAIN,iBAE5B,OACE4N,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,YACbF,EAAAhH,EAAAiH,cAACkM,GAAD,CACEvF,IAAK7M,KAAK8F,MAAM+L,MAAMhF,IACtB3F,QAASlH,KAAKoR,oBACdrE,gBAAiBA,EACjBD,gBAAiBA,EACjBzQ,MAAO2V,EACPnc,OAAQA,IAEVoQ,EAAAhH,EAAAiH,cAAA,QAAMC,UAAU,WACdF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,WACbF,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,+BACbF,EAAAhH,EAAAiH,cAAA,WAASC,UAAU,SACjBF,EAAAhH,EAAAiH,cAACmM,GAAD,CAAS7V,IAAKyV,EAAW9Z,IAAK+Z,EAAWvZ,IAAKwZ,IAC9ClM,EAAAhH,EAAAiH,cAACoM,GAAD,OAEFrM,EAAAhH,EAAAiH,cAAA,WAASC,UAAU,QACjBF,EAAAhH,EAAAiH,cAACqM,GAAA,EAAD,KACEtM,EAAAhH,EAAAiH,cAACoG,GAAA,EAAD,CACEkG,KAAI,GAAA9T,OAAKmO,EAAL,QACJ4F,OAAK,EACLjG,OAAQ,SAAA1G,GAAK,OACXG,EAAAhH,EAAAiH,cAACwM,GAADzc,OAAAsW,OAAA,CACErF,QAAS0K,EAAKN,kBACdhZ,KAAMH,EACNW,SAAUgZ,GACNhM,EAJN,CAKElE,OAAQ/J,QAIdoO,EAAAhH,EAAAiH,cAACoG,GAAA,EAAD,CACEkG,KAAI,GAAA9T,OAAKmO,EAAL,QACJ4F,OAAK,EACLjG,OAAQ,SAAA1G,GAAK,OACXG,EAAAhH,EAAAiH,cAACwM,GAADzc,OAAAsW,OAAA,CACErF,QAAS0K,EAAKN,kBACdhZ,KAAMK,EACNG,SAAUiZ,GACNjM,EAJN,CAKElE,OAAQ9J,aASxBmO,EAAAhH,EAAAiH,cAACyM,GAAD,WAvERxB,EAAA,CAA8BjJ,cAmHxB6D,GAAqB,CACzBlU,YACAC,YACAC,eACAlC,UAGamW,eAjBS,SAAC5V,GAAD,MAAoB,CAC1C+B,IAAKiB,EAAOhD,GACZuC,IAAKU,EAAOjD,GACZwC,gBAAiBU,EAAmBlD,GACpC2C,gBAAiBQ,EAAmBnD,GACpC4b,UAAWlV,GAAa1G,GACxB6b,UAAWhV,GAAa7G,GACxB8b,UAAWhV,GAAa9G,GACxB+b,UAAWhV,GAAa/G,KAWxB2V,GAFaC,CAGbmF,ICxIayB,GAdf,SAAAtM,GAAA,SAAAsM,IAAA,OAAA3c,OAAAwQ,GAAA,EAAAxQ,CAAA+J,KAAA4S,GAAA3c,OAAAyQ,GAAA,EAAAzQ,CAAA+J,KAAA/J,OAAA0Q,GAAA,EAAA1Q,CAAA2c,GAAA7S,MAAAC,KAAAC,YAAA,OAAAhK,OAAAqR,GAAA,EAAArR,CAAA2c,EAAAtM,GAAArQ,OAAAsR,GAAA,EAAAtR,CAAA2c,EAAA,EAAApL,IAAA,SAAAxQ,MAAA,WAEI,OACEiP,EAAAhH,EAAAiH,cAAA,OAAKC,UAAU,aACbF,EAAAhH,EAAAiH,cAACqM,GAAA,EAAD,KACEtM,EAAAhH,EAAAiH,cAACoG,GAAA,EAAD,CAAOkG,KAAK,IAAIC,OAAK,EAACtG,UAAWb,KACjCrF,EAAAhH,EAAAiH,cAAC2M,GAAD,CAAcL,KAAK,SAASrG,UAAWgF,KACvClL,EAAAhH,EAAAiH,cAACwF,GAAA,EAAD,CAAUC,GAAG,YAPvBiH,EAAA,CAA+B1K,aCS/BqG,OAAOlB,MAAQyF,EAAQ,KAEvB,IAAMC,GdXS,SAACC,GACd,IAAMD,EAAQE,sBACZC,GACAF,EACAG,+BAAoBC,0BAAgBzN,MAKtC,OAFAA,GAAe0N,IAAIC,IAEZP,EcEKE,GAEdM,IAAS/G,OACPvG,EAAAhH,EAAAiH,cAACsN,EAAA,EAAD,KACEvN,EAAAhH,EAAAiH,cAACuN,EAAA,EAAD,CAAUV,MAAOA,IACf9M,EAAAhH,EAAAiH,cAACwN,GAAD,QAGJtF,SAASuF,eAAe,6BC3B1BC,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.ab216aa9.chunk.js","sourcesContent":["import { createActions } from 'redux-actions';\n\nconst REGISTRATION_REQUEST = 'REGISTRATION_REQUEST';\n\nconst LOGIN_REQUEST = 'LOGIN_REQUEST';\n\nexport const {\n  registrationRequest,\n  registrationSuccess,\n  registrationFailure\n} = createActions(\n  REGISTRATION_REQUEST,\n  'REGISTRATION_SUCCESS',\n  'REGISTRATION_FAILURE'\n);\n\nexport const {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  logout\n} = createActions(LOGIN_REQUEST, 'LOGIN_SUCCESS', 'LOGIN_FAILURE', 'LOGOUT');\n\nexport interface ILoginRequest {\n  type: typeof LOGIN_REQUEST;\n  payload: {\n    email: string;\n    password: string;\n  };\n}\n\nexport interface IRegistrationRequest {\n  type: typeof REGISTRATION_REQUEST;\n  payload: {\n    email: string;\n    password: string;\n  };\n}\n","import {\n  registrationRequest,\n  registrationSuccess,\n  registrationFailure,\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  logout\n} from '../actions/auth';\nimport { handleActions } from 'redux-actions';\nimport { IStore } from '../types';\n\nexport interface IAuthState {\n  isAuthorized: boolean;\n  loginError?: string | null;\n  registrationError?: string | null;\n}\n\ninterface IAuthActionPayload {\n  message?: IObjectErrors | undefined;\n}\n\ninterface IObjectErrors {\n  [x: string]: string[];\n}\n\nconst initState: IAuthState = {\n  isAuthorized: false,\n  loginError: null,\n  registrationError: null\n};\n\nexport const auth = handleActions<IAuthState, IAuthActionPayload>(\n  {\n    [registrationRequest.toString()]: state => ({\n      ...state,\n      registrationError: null\n    }),\n    [registrationSuccess.toString()]: state => ({\n      ...state,\n      isAuthorized: true,\n      registrationError: null\n    }),\n    [registrationFailure.toString()]: (state, action) => ({\n      ...state,\n      isAuthorized: false,\n      registrationError: handleRegistrationError(\n        action.payload && action.payload.message\n      )\n    }),\n    [loginRequest.toString()]: state => ({\n      ...state,\n      loginError: null\n    }),\n    [loginSuccess.toString()]: state => ({\n      ...state,\n      isAuthorized: true,\n      loginError: null\n    }),\n    [loginFailure.toString()]: (state, action) => ({\n      ...state,\n      isAuthorized: false,\n      loginError: handleRegistrationError(\n        action.payload && action.payload.message\n      )\n    }),\n    [logout.toString()]: state => ({\n      ...state,\n      isAuthorized: false\n    })\n  },\n  initState\n);\n\nexport function handleRegistrationError(\n  error: IObjectErrors | string | undefined\n) {\n  if (!error) return null;\n  if (typeof error === 'string') return error;\n  let errorKeys = Object.keys(error);\n  return errorKeys\n    .map(value => {\n      const resultValue = error[value];\n      return [...resultValue].join(' ') + '.';\n    })\n    .join(' ');\n}\n\nexport const getIsAuthorized = (state: IStore) => state.auth.isAuthorized;\nexport const getLoginError = (state: IStore) => state.auth.loginError;\nexport const getRegistrationError = (state: IStore) =>\n  state.auth.registrationError;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fetchBtcRequest,\n  fetchBtcSuccess,\n  fetchBtcFailure\n} = createActions(\n  'FETCH_BTC_REQUEST',\n  'FETCH_BTC_SUCCESS',\n  'FETCH_BTC_FAILURE'\n);\n\nexport const {\n  fetchEthRequest,\n  fetchEthSuccess,\n  fetchEthFailure\n} = createActions(\n  'FETCH_ETH_REQUEST',\n  'FETCH_ETH_SUCCESS',\n  'FETCH_ETH_FAILURE'\n);\n\nexport const { selectBtc, selectEth, selectOffset } = createActions(\n  'SELECT_BTC',\n  'SELECT_ETH',\n  'SELECT_OFFSET'\n);\n\nexport interface IFetchBtcRequest {\n  type: 'FETCH_BTC_REQUEST';\n  payload: string;\n}\n\nexport interface IFetchEthRequest {\n  type: 'FETCH_ETH_REQUEST';\n  payload: string;\n}\n","import {\n  selectBtc,\n  selectEth,\n  selectOffset,\n  fetchBtcRequest,\n  fetchEthRequest,\n  fetchBtcSuccess,\n  fetchBtcFailure,\n  fetchEthFailure,\n  fetchEthSuccess\n} from '../actions/currency';\nimport { logout } from '../actions/auth';\nimport { handleActions } from 'redux-actions';\nimport { ILoadingState, ICurrency } from '../types';\nimport { IStore } from '../types';\n\nexport interface ICurrencyState {\n  selected: string;\n  offset: string;\n  btc: ICurrency;\n  eth: ICurrency;\n  btcLoadingState: ILoadingState;\n  ethLoadingState: ILoadingState;\n}\n\nconst initState = {\n  selected: 'btc',\n  offset: '2h',\n  btc: {\n    currentPurchasePrice: 0,\n    currentSellPrice: 0,\n    data: [],\n    max: '0',\n    min: '0',\n    purchase: [],\n    sell: []\n  },\n  eth: {\n    currentPurchasePrice: 0,\n    currentSellPrice: 0,\n    data: [],\n    max: '0',\n    min: '0',\n    purchase: [],\n    sell: []\n  },\n  btcLoadingState: {\n    isLoading: false,\n    isLoaded: false,\n    error: false\n  },\n  ethLoadingState: {\n    isLoading: false,\n    isLoaded: false,\n    error: false\n  }\n};\n\nexport const currency = handleActions<ICurrencyState, any>(\n  {\n    [selectBtc.toString()]: state => ({\n      ...state,\n      selected: 'btc'\n    }),\n    [selectEth.toString()]: state => ({\n      ...state,\n      selected: 'eth'\n    }),\n    [selectOffset.toString()]: (state, action) => ({\n      ...state,\n      offset: action.payload\n    }),\n    [fetchBtcRequest.toString()]: state => ({\n      ...state,\n      btcLoadingState: { isLoading: true, isLoaded: false, error: false }\n    }),\n    [fetchBtcSuccess.toString()]: (state, action) => ({\n      ...state,\n      btc: action.payload,\n      btcLoadingState: { isLoading: false, isLoaded: true, error: false }\n    }),\n    [fetchBtcFailure.toString()]: (state, action) => ({\n      ...state,\n      btcLoadingState: { isLoading: false, isLoaded: true, error: action.error }\n    }),\n    [fetchEthRequest.toString()]: state => ({\n      ...state,\n      ethLoadingState: { isLoading: true, isLoaded: false, error: false }\n    }),\n    [fetchEthSuccess.toString()]: (state, action) => ({\n      ...state,\n      eth: action.payload,\n      ethLoadingState: { isLoading: false, isLoaded: true, error: false }\n    }),\n    [fetchEthFailure.toString()]: (state, action) => ({\n      ...state,\n      ethLoadingState: { isLoading: false, isLoaded: true, error: action.error }\n    }),\n    [logout.toString()]: () => ({ ...initState })\n  },\n  initState\n);\n\nexport const getOffset = (state: IStore) => state.currency.offset;\nexport const getSelected = (state: IStore) => state.currency.selected;\nexport const getBtc = (state: IStore) => state.currency.btc;\nexport const getEth = (state: IStore) => state.currency.eth;\nexport const getBtcLoadingState = (state: IStore) =>\n  state.currency.btcLoadingState;\nexport const getEthLoadingState = (state: IStore) =>\n  state.currency.ethLoadingState;\n","import { createActions } from 'redux-actions';\n\nexport const { setNetworkError, clearNetworkErrors } = createActions(\n  'SET_NETWORK_ERROR',\n  'CLEAR_NETWORK_ERRORS'\n);\n","import { setNetworkError, clearNetworkErrors } from '../actions/network';\nimport { handleActions } from 'redux-actions';\nimport { IStore } from '../types';\n\nconst initialState = null;\nexport type NetworkState = null | string;\n\nexport const networkError = handleActions<NetworkState, string>(\n  {\n    [setNetworkError.toString()]: (state, action) =>\n      action.payload ? action.payload : null,\n    [clearNetworkErrors.toString()]: () => null\n  },\n  initialState\n);\n\nexport const getIsNetworkErrorPresent = (state: IStore) =>\n  state.networkError != null;\nexport const getNetworkError = (state: IStore) => state.networkError;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  userInformationRequest,\n  userInformationSuccess,\n  userInformationFailure,\n  userWalletRequest,\n  userWalletSuccess,\n  userWalletFailure\n} = createActions(\n  'USER_INFORMATION_REQUEST',\n  'USER_INFORMATION_SUCCESS',\n  'USER_INFORMATION_FAILURE',\n  'USER_WALLET_REQUEST',\n  'USER_WALLET_SUCCESS',\n  'USER_WALLET_FAILURE'\n);\n","import { createActions } from 'redux-actions';\n\nexport const {\n  sellCurrencyRequest,\n  sellCurrencySuccess,\n  sellCurrencyFailure\n} = createActions(\n  'SELL_CURRENCY_REQUEST',\n  'SELL_CURRENCY_SUCCESS',\n  'SELL_CURRENCY_FAILURE'\n);\n\nexport const {\n  buyCurrencyRequest,\n  buyCurrencySuccess,\n  buyCurrencyFailure\n} = createActions(\n  'BUY_CURRENCY_REQUEST',\n  'BUY_CURRENCY_SUCCESS',\n  'BUY_CURRENCY_FAILURE'\n);\n\nexport interface ISellCurrencyRequest {\n  type: 'SELL_CURRENCY_REQUEST';\n  payload: {\n    currency: 'btc' | 'eth';\n    value: string;\n  };\n}\n\nexport interface IBuyCurrencyRequest {\n  type: 'BUY_CURRENCY_REQUEST';\n  payload: {\n    currency: 'btc' | 'eth';\n    value: string;\n  };\n}\n","import { ICurrency, IResponce, IResponceData } from '../types';\n\nexport function parseCurrency(numCurrency: number) {\n  if (!numCurrency) return (0).toFixed(4).split('.');\n  return numCurrency.toFixed(4).split('.');\n}\n\nexport function handleInputData(response: IResponce): ICurrency {\n  function handleDataForChart(\n    inputData: IResponceData[],\n    dataType: 'sell' | 'purchase'\n  ): [Date, number][] {\n    return inputData.map(\n      (value: IResponceData): [Date, number] => [\n        new Date(value.mts),\n        value[dataType]\n      ]\n    );\n  }\n\n  function getExtremeValue(\n    inputData: IResponceData[],\n    typeOfExtreme: 'max' | 'min'\n  ): string {\n    switch (typeOfExtreme) {\n      case 'max':\n        let sellMax = getMaxValueOfProp(inputData, 'sell');\n        let purchaseMax = getMaxValueOfProp(inputData, 'purchase');\n        return Math.max(sellMax, purchaseMax).toFixed(2);\n      case 'min':\n        let sellMin = getMinValueOfProp(inputData, 'sell');\n        let purchaseMin = getMinValueOfProp(inputData, 'purchase');\n        return Math.min(sellMin, purchaseMin).toFixed(2);\n      default:\n        throw new Error(\n          'Неверное значения аргумента typeOfExtreme, аргумент может принимать только значения min и max'\n        );\n    }\n  }\n\n  const result: ICurrency = {\n    sell: [],\n    purchase: [],\n    currentSellPrice: 0,\n    currentPurchasePrice: 0,\n    min: '0',\n    max: '0',\n    data: response.data.result\n  };\n  result.sell = handleDataForChart(result.data, 'sell');\n  result.purchase = handleDataForChart(result.data, 'purchase');\n  result.currentSellPrice = result.sell[0][1];\n  result.currentPurchasePrice = result.purchase[0][1];\n  result.min = getExtremeValue(result.data, 'min');\n  result.max = getExtremeValue(result.data, 'max');\n\n  return result;\n}\n\nexport function getMinValueOfProp(\n  arr: IResponceData[],\n  prop: 'sell' | 'purchase'\n) {\n  let elementWithMinValue = arr.reduce((prev, current) => {\n    return current[prop] < prev[prop] ? current : prev;\n  });\n  return elementWithMinValue[prop];\n}\n\nexport function getMaxValueOfProp(\n  arr: IResponceData[],\n  prop: 'sell' | 'purchase'\n) {\n  let elementWithMaxValue = arr.reduce((prev, current) => {\n    return current[prop] > prev[prop] ? current : prev;\n  });\n  return elementWithMaxValue[prop];\n}\n","import {\n  userInformationSuccess,\n  userInformationFailure,\n  userWalletSuccess,\n  userWalletFailure\n} from '../actions/user';\nimport {\n  sellCurrencySuccess,\n  sellCurrencyFailure,\n  buyCurrencySuccess,\n  buyCurrencyFailure\n} from '../actions/trade';\nimport { logout } from '../actions/auth';\nimport { parseCurrency } from '../helpers/dataHandler';\nimport { handleActions } from 'redux-actions';\nimport { IStore } from '../types';\n\nexport interface IUserState {\n  userInfo: {\n    email: string;\n  };\n  userInfoError: string | boolean;\n  wallet: {\n    usd: number;\n    btc: number;\n    eth: number;\n  };\n  walletError: string | boolean;\n  errorSell: string | boolean;\n  errorBuy: string | boolean;\n}\n\nconst initState = {\n  userInfo: {\n    email: ''\n  },\n  userInfoError: false,\n  wallet: {\n    usd: 0,\n    btc: 0,\n    eth: 0\n  },\n  walletError: false,\n  errorSell: false,\n  errorBuy: false\n};\n\nexport const user = handleActions<IUserState, any>(\n  {\n    [userInformationSuccess.toString()]: (state, action) => ({\n      ...state,\n      userInfo: action.payload,\n      userInfoError: false\n    }),\n    [userWalletSuccess.toString()]: (state, action) => ({\n      ...state,\n      wallet: action.payload,\n      walletError: false\n    }),\n    [userInformationFailure.toString()]: (state, action) => ({\n      ...state,\n      userInfoError: action.error ? action.error : false\n    }),\n    [userWalletFailure.toString()]: (state, action) => ({\n      ...state,\n      walletError: action.error ? action.error : false\n    }),\n    [sellCurrencySuccess.toString()]: (state, action) => ({\n      ...state,\n      errorSell: false,\n      errorBuy: false,\n      wallet: {\n        usd: action.payload.usd,\n        btc: action.payload.btc,\n        eth: action.payload.eth\n      }\n    }),\n    [sellCurrencyFailure.toString()]: (state, action) => ({\n      ...state,\n      errorSell: action.payload\n    }),\n    [buyCurrencySuccess.toString()]: (state, action) => ({\n      ...state,\n      errorSell: false,\n      errorBuy: false,\n      wallet: {\n        usd: action.payload.usd,\n        btc: action.payload.btc,\n        eth: action.payload.eth\n      }\n    }),\n    [buyCurrencyFailure.toString()]: (state, action) => ({\n      ...state,\n      errorBuy: action.payload\n    }),\n    [logout.toString()]: () => ({ ...initState })\n  },\n  initState\n);\n\nexport const getUserEmail = (state: IStore) => state.user.userInfo.email;\nexport const getErrorSell = (state: IStore) => state.user.errorSell;\nexport const getErrorBuy = (state: IStore) => state.user.errorBuy;\nexport const getWallet = (state: IStore) => state.user.wallet;\nexport const getParsedUsd = (state: IStore) =>\n  parseCurrency(state.user.wallet.usd);\nexport const getParsedBtc = (state: IStore) =>\n  parseCurrency(state.user.wallet.btc);\nexport const getParsedEth = (state: IStore) =>\n  parseCurrency(state.user.wallet.eth);\n","import { combineReducers } from 'redux';\nimport { auth } from './auth';\nimport { currency } from './currency';\nimport { networkError } from './network';\nimport { user } from './user';\nimport { IStore } from '../types';\n\nexport default combineReducers<IStore | any>({\n  auth,\n  currency,\n  networkError,\n  user\n});\n","export function getTokenFromLocalStorage(): string | null {\n  return localStorage.getItem('access_token');\n}\n\nexport function setTokenToLocalStorage(token: string): void {\n  localStorage.setItem('access_token', token);\n}\n\nexport function removeTokenFromLocalStorage(): void {\n  localStorage.removeItem('access_token');\n}\n","import axios from 'axios';\nimport { ICredentials } from './types';\n\nconst baseURL =\n  process.env.NODE_ENV === 'development'\n    ? 'https://crypto-exchange-backend.herokuapp.com/'\n    : '/';\n\naxios.defaults.headers.post['Accept'] = '*/*';\n\nconst instance = axios.create({\n  baseURL,\n  headers: { Accept: '*/*' }\n});\n\nconst jsonInstance = axios.create({\n  baseURL,\n  headers: { 'Content-Type': 'application/json' }\n});\n\nexport const setTokenApi = (access_token: string): void => {\n  instance.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n};\n\nexport const clearTokenApi = (): void => {\n  instance.defaults.headers.common['Authorization'] = undefined;\n};\n\nexport const login = async ({ email, password }: ICredentials) => {\n  const response = await jsonInstance.post('/user_token', { email, password });\n  if (response.data.result === 'error') return Promise.reject(response);\n  return response;\n};\n\nexport const registration = async ({ email, password }: ICredentials) => {\n  const response = await instance.post(\n    '/users',\n    `email=${email}&password=${password}`\n  );\n\n  if (response.data.result === 'error') return Promise.reject(response);\n  return response;\n};\n\nexport const candles = (symbol: string, offset: string) =>\n  instance.get('/candles', { params: { symbol, offset } });\nexport const getWallet = () => instance.get('/users/wallet');\n\nexport const getUserInfo = () => instance.get('/users/me');\n\nexport const buyCurrency = async (currency: string, value: string) => {\n  const response = await instance.get(\n    `stock/exchange?symbol=${currency}&operation=purchase&sum=${value}`\n  );\n  if (response.data.result === 'error') {\n    return Promise.reject(response.data.message);\n  }\n  return response;\n};\n\nexport const sellCurrency = async (currency: string, value: string) => {\n  const response = await instance.get(\n    `stock/exchange?symbol=${currency}&operation=sell&sum=${value}`\n  );\n  if (response.data.result === 'error') {\n    return Promise.reject(response.data.message);\n  }\n  return response;\n};\n","import { take, put, call, select, all } from 'redux-saga/effects';\nimport { registrationSuccess, loginSuccess, logout } from '../actions/auth';\nimport { userInformationRequest, userWalletRequest } from '../actions/user';\nimport {\n  getTokenFromLocalStorage,\n  setTokenToLocalStorage,\n  removeTokenFromLocalStorage\n} from '../localStorage';\nimport { getIsAuthorized } from '../reducers/auth';\nimport { setTokenApi, clearTokenApi } from '../api';\n\nexport function* authFlow() {\n  while (true) {\n    const isAuthorized: boolean = yield select(getIsAuthorized);\n    const localStorageToken: string | null = yield call(\n      getTokenFromLocalStorage\n    );\n    let token: string = '';\n\n    if (!isAuthorized) {\n      if (localStorageToken !== null && localStorageToken !== undefined) {\n        token = localStorageToken;\n        yield call(setTokenApi, token);\n        yield put(loginSuccess(token));\n      } else {\n        const action = yield take([loginSuccess, registrationSuccess]);\n        token = action.payload;\n      }\n    }\n    yield call(setTokenApi, token);\n    yield call(setTokenToLocalStorage, token);\n    yield put(userInformationRequest());\n    yield put(userWalletRequest());\n    yield take(logout);\n    yield call(removeTokenFromLocalStorage);\n    yield call(clearTokenApi);\n  }\n}\n","import { call, put, select } from 'redux-saga/effects';\nimport { clearNetworkErrors, setNetworkError } from '../actions/network';\nimport { getIsNetworkErrorPresent } from '../reducers/network';\n\nexport default function* requestFlow(\n  fn: (...args: any[]) => any,\n  ...args: any\n): any {\n  try {\n    const response = yield call(fn, ...args);\n    if (yield select(getIsNetworkErrorPresent)) yield put(clearNetworkErrors());\n    return response;\n  } catch (error) {\n    const { response } = error;\n    if (response.status >= 400) {\n      yield put(setNetworkError(response));\n    }\n\n    throw response;\n  }\n}\n","import {\n  loginRequest,\n  loginSuccess,\n  loginFailure,\n  ILoginRequest\n} from '../actions/auth';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { login } from '../api';\nimport requestFlow from './request';\nimport { IAuthResponse } from '../types';\n\nexport function* fetchLoginSaga(action: ILoginRequest) {\n  try {\n    const response: IAuthResponse = yield call(\n      requestFlow,\n      login,\n      action.payload\n    );\n    yield put(loginSuccess(response.data.jwt));\n  } catch (error) {\n    yield put(loginFailure(error.data));\n  }\n}\n\nexport function* fetchLoginWatch() {\n  yield takeLatest(loginRequest, fetchLoginSaga);\n}\n","import {\n  registrationRequest,\n  registrationSuccess,\n  registrationFailure,\n  IRegistrationRequest\n} from '../actions/auth';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { registration } from '../api';\nimport requestFlow from '../sagas/request';\nimport { IAuthResponse } from '../types';\n\nexport function* fetchRegistrationSaga(action: IRegistrationRequest) {\n  try {\n    const response: IAuthResponse = yield call(\n      requestFlow,\n      registration,\n      action.payload\n    );\n    yield put(registrationSuccess(response.data.jwt));\n  } catch (error) {\n    yield put(registrationFailure(error.data));\n  }\n}\n\nexport function* fetchRegistrationWatch() {\n  yield takeLatest(registrationRequest, fetchRegistrationSaga);\n}\n","import {\n  userInformationRequest,\n  userInformationSuccess,\n  userInformationFailure,\n  userWalletRequest,\n  userWalletSuccess,\n  userWalletFailure\n} from '../actions/user';\nimport { takeLatest, call, put } from 'redux-saga/effects';\nimport { getWallet, getUserInfo } from '../api';\nimport requestFlow from './request';\n\ninterface IUserWalletResponse {\n  data: {\n    result: {\n      btc: number;\n      eth: number;\n      usd: number;\n    };\n  };\n}\n\ninterface IUserInfoResponse {\n  data: {\n    result: {\n      email: string;\n    };\n  };\n}\n\nexport function* fetchUserInfo() {\n  try {\n    const response: IUserInfoResponse = yield call(requestFlow, getUserInfo);\n    yield put(userInformationSuccess(response.data.result));\n  } catch (error) {\n    yield put(userInformationFailure(error.data));\n  }\n}\nexport function* fetchUserWallet() {\n  try {\n    const response: IUserWalletResponse = yield call(requestFlow, getWallet);\n    yield put(userWalletSuccess(response.data.result));\n  } catch (error) {\n    yield put(userWalletFailure(error.data));\n  }\n}\n\nexport function* fetchUserWatch() {\n  yield takeLatest(userInformationRequest, fetchUserInfo);\n  yield takeLatest(userWalletRequest, fetchUserWallet);\n}\n","import {\n  takeLatest,\n  fork,\n  take,\n  select,\n  put,\n  cancel,\n  call,\n  delay\n} from 'redux-saga/effects';\nimport { loginSuccess, logout } from '../actions/auth';\nimport { getOffset } from '../reducers/currency';\nimport {\n  selectBtc,\n  selectEth,\n  fetchBtcRequest,\n  fetchEthRequest,\n  fetchBtcSuccess,\n  fetchBtcFailure,\n  fetchEthFailure,\n  fetchEthSuccess,\n  selectOffset,\n  IFetchBtcRequest,\n  IFetchEthRequest\n} from '../actions/currency';\nimport { candles } from '../api';\nimport { handleInputData } from '../helpers/dataHandler';\nimport { IResponce, ICurrency } from '../types';\n\nexport function* fetchCurrencyFlow() {\n  while (true) {\n    const offset: string = yield select(getOffset);\n    yield put(fetchBtcRequest(offset));\n    yield put(fetchEthRequest(offset));\n\n    yield delay(30000);\n  }\n}\n\nexport function* currencyWatch() {\n  let currencyTask;\n  while (true) {\n    const action = yield take([\n      loginSuccess,\n      logout,\n      selectBtc,\n      selectEth,\n      selectOffset\n    ]);\n\n    if (currencyTask) {\n      yield cancel(currencyTask);\n      currencyTask = undefined;\n    }\n    if (action.type !== logout.toString())\n      currencyTask = yield fork(fetchCurrencyFlow);\n  }\n}\n\nexport function* fetchBtcFlow(action: IFetchBtcRequest) {\n  try {\n    const response: IResponce = yield call(candles, 'btc', action.payload);\n    const result: ICurrency = handleInputData(response);\n    yield put(fetchBtcSuccess(result));\n  } catch (error) {\n    yield put(fetchBtcFailure(error));\n  }\n}\n\nexport function* fetchEthFlow(action: IFetchEthRequest) {\n  try {\n    const response: IResponce = yield call(candles, 'eth', action.payload);\n    const result: ICurrency = handleInputData(response);\n    yield put(fetchEthSuccess(result));\n  } catch (error) {\n    yield put(fetchEthFailure(error));\n  }\n}\n\nexport function* fetchBtcWatch() {\n  yield takeLatest(fetchBtcRequest, fetchBtcFlow);\n}\n\nexport function* fetchEthWatch() {\n  yield takeLatest(fetchEthRequest, fetchEthFlow);\n}\n","import {\n  sellCurrencyRequest,\n  sellCurrencySuccess,\n  sellCurrencyFailure,\n  buyCurrencyRequest,\n  buyCurrencySuccess,\n  buyCurrencyFailure,\n  ISellCurrencyRequest,\n  IBuyCurrencyRequest\n} from '../actions/trade';\nimport { takeEvery, call, put } from 'redux-saga/effects';\nimport { sellCurrency, buyCurrency } from '../api';\n\ninterface ITradeResponse {\n  data: {\n    btc: number;\n    eth: number;\n    result: string;\n    usd: number;\n  };\n}\n\nexport function* fetchSellCurrencySaga(action: ISellCurrencyRequest) {\n  try {\n    const currency = action.payload.currency;\n    const value = action.payload.value;\n    let response: ITradeResponse = yield call(sellCurrency, currency, value);\n    yield put(sellCurrencySuccess(response.data));\n  } catch (error) {\n    yield put(sellCurrencyFailure(error));\n  }\n}\n\nexport function* fetchBuyCurrencySaga(action: IBuyCurrencyRequest) {\n  try {\n    const currency = action.payload.currency;\n    const value = action.payload.value;\n    let response = yield call(buyCurrency, currency, value);\n    yield put(buyCurrencySuccess(response.data));\n  } catch (error) {\n    yield put(buyCurrencyFailure(error));\n  }\n}\n\nexport function* fetchSellCurrencyWatch() {\n  yield takeEvery(sellCurrencyRequest, fetchSellCurrencySaga);\n}\n\nexport function* fetchBuyCurrencyWatch() {\n  yield takeEvery(buyCurrencyRequest, fetchBuyCurrencySaga);\n}\n","import { fork } from 'redux-saga/effects';\nimport { authFlow } from './auth';\nimport { fetchLoginWatch } from './login';\nimport { fetchRegistrationWatch } from './registration';\nimport { fetchUserWatch } from './user';\nimport { fetchBtcWatch, fetchEthWatch, currencyWatch } from './currency';\nimport { fetchSellCurrencyWatch, fetchBuyCurrencyWatch } from './trade';\n\nexport default function*() {\n  yield fork(authFlow);\n  yield fork(fetchLoginWatch);\n  yield fork(fetchRegistrationWatch);\n  yield fork(fetchBtcWatch);\n  yield fork(fetchEthWatch);\n  yield fork(currencyWatch);\n  yield fork(fetchUserWatch);\n  yield fork(fetchSellCurrencyWatch);\n  yield fork(fetchBuyCurrencyWatch);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default (initialState?: any) => {\n  const store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  return store;\n};\n","import React from 'react';\nimport './AuthError.scss';\n\ninterface IAuthErrorProps {\n  isLoginStage: boolean;\n  loginError?: string | null;\n  registrationError?: string | null;\n  inputError: string | null;\n}\n\nexport function AuthError(props: IAuthErrorProps) {\n  const { isLoginStage, loginError, registrationError, inputError } = props;\n  return (\n    <div className=\"AuthError\">\n      <div className=\"error__content\" id=\"inputError\">\n        {inputError ? inputError : null}\n      </div>\n      <div className=\"error__content\" id=\"flowError\">\n        {isLoginStage ? loginError : registrationError}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { AuthError } from '../AuthError';\nimport './AuthForm.scss';\nimport userShape from './images/user-shape.svg';\nimport lockShape from './images/padlock-unlock.svg';\n\ninterface IAuthErrorState {\n  [x: string]: string | null;\n}\n\ntype inputType = {\n  id: string;\n  value: string;\n};\n\ninterface IAuthErrorProps {\n  isLoginStage: boolean;\n  loginError?: string | null;\n  registrationError?: string | null;\n  onClick: (input: { email: string; password: string }) => void;\n}\n\nexport class AuthForm extends Component<IAuthErrorProps, IAuthErrorState> {\n  state = {\n    email: '',\n    password: '',\n    inputError: null\n  };\n\n  render() {\n    const { email, password, inputError } = this.state;\n    const { isLoginStage, loginError, registrationError } = this.props;\n    return (\n      <form className=\"auth__form\">\n        <div className=\"auth__login-wrap\">\n          <img src={userShape} alt=\"icon\" className=\"auth__icon\" />\n          <input\n            id=\"email\"\n            placeholder=\"email\"\n            type=\"email\"\n            className=\"auth__input\"\n            value={email}\n            onChange={this.handleChange}\n          />\n        </div>\n        <div className=\"auth__login-wrap\">\n          <img src={lockShape} alt=\"icon\" className=\"auth__icon\" />\n          <input\n            id=\"password\"\n            placeholder=\"password\"\n            type=\"password\"\n            className=\"auth__input\"\n            value={password}\n            onChange={this.handleChange}\n          />\n        </div>\n        <AuthError\n          isLoginStage={isLoginStage}\n          loginError={loginError}\n          registrationError={registrationError}\n          inputError={inputError}\n        />\n        <button\n          type=\"submit\"\n          className=\"auth__submit\"\n          onClick={this.handleClick}\n        >\n          {isLoginStage ? 'Войти' : 'Зарегистрироваться'}\n        </button>\n      </form>\n    );\n  }\n\n  handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const input: inputType = e.target;\n    this.setState({ [input.id]: input.value });\n  };\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const { onClick } = this.props;\n    const { email, password } = this.state;\n    e.preventDefault();\n\n    if (!/^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n      this.setState({ inputError: 'Email не корректен' });\n    } else if (email === '' || password === '') {\n      this.setState({ inputError: 'Оба поля обязательны для заполнения' });\n    } else {\n      this.setState({ inputError: null });\n      onClick({ email, password });\n    }\n  };\n}\n\nexport default AuthForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport './AuthPage.scss';\nimport logo from './images/Logo.svg';\nimport AuthForm from './AuthForm';\nimport Particles from 'react-particles-js';\nimport params from '../../particles-params';\nimport { loginRequest } from '../../actions/auth';\nimport { registrationRequest } from '../../actions/auth';\nimport {\n  getIsAuthorized,\n  getLoginError,\n  getRegistrationError\n} from '../../reducers/auth';\nimport { ICredentials, IParaticlesParams, IStore } from '../../types';\n\ninterface IAuthPageState {\n  isLoginStage: boolean;\n}\n\ninterface IAuthPageProps {\n  loginError?: string | null;\n  registrationError?: string | null;\n  isAuthorized: boolean;\n  loginRequest: typeof loginRequest;\n  registrationRequest: typeof registrationRequest;\n}\n\nconst particlesParams = params as IParaticlesParams;\n\nexport class AuthPage extends Component<IAuthPageProps, IAuthPageState> {\n  state = {\n    isLoginStage: true\n  };\n\n  render() {\n    const { isLoginStage } = this.state;\n    const { loginError, registrationError, isAuthorized } = this.props;\n\n    if (isAuthorized) {\n      return <Redirect to=\"/trade/btc\" />;\n    }\n    return (\n      <main className=\"AuthPage\">\n        <div className=\"auth\">\n          <div className=\"auth__wrap\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n            <AuthForm\n              onClick={this.handleClick}\n              isLoginStage={isLoginStage}\n              loginError={loginError}\n              registrationError={registrationError}\n            />\n          </div>\n          <div className=\"auth__footer\">\n            {isLoginStage ? (\n              <span className=\"auth__text\">Впервые на сайте?</span>\n            ) : (\n              <span className=\"auth__text\">Уже зарегистрированы?</span>\n            )}\n            <a className=\"auth__link\" onClick={this.handleStatusChangeClick}>\n              {isLoginStage ? 'Регистрация' : 'Войти'}\n            </a>\n          </div>\n        </div>\n        <div className=\"animation\">\n          <Particles params={particlesParams} />\n        </div>\n      </main>\n    );\n  }\n\n  handleClick = (authData: ICredentials): void => {\n    const { loginRequest, registrationRequest } = this.props;\n    const { isLoginStage } = this.state;\n\n    isLoginStage ? loginRequest(authData) : registrationRequest(authData);\n  };\n\n  handleStatusChangeClick = (): void => {\n    const { isLoginStage } = this.state;\n    this.setState({ isLoginStage: !isLoginStage });\n  };\n}\n\nconst mapStateToProps = (state: IStore) => ({\n  isAuthorized: getIsAuthorized(state),\n  loginError: getLoginError(state),\n  registrationError: getRegistrationError(state)\n});\nconst mapDispatchToProps = { loginRequest, registrationRequest };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AuthPage);\n","export default {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 1500\n      }\n    },\n    color: {\n      value: '#4db6e2'\n    },\n    shape: {\n      type: 'polygon',\n      stroke: {\n        width: 0,\n        color: '#000000'\n      },\n      polygon: {\n        nb_sides: 5\n      },\n      image: {\n        src: 'img/github.svg',\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 0.6089109307524051,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    size: {\n      value: 4.005992965476349,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: true,\n      distance: 192.28766234286476,\n      color: '#4db6e2',\n      opacity: 0.8011985930952699,\n      width: 1.2819177489524316,\n      shadow: {\n        enable: false,\n        blur: 1,\n        color: '#4db6e2'\n      }\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: 'none',\n      random: true,\n      straight: false,\n      out_mode: 'out',\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 3044.5546537620253,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: 'canvas',\n    events: {\n      onhover: {\n        enable: false,\n        mode: 'grab'\n      },\n      onclick: {\n        enable: false,\n        mode: 'grab'\n      },\n      resize: false\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 1\n        }\n      },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      }\n    }\n  },\n  retina_detect: true,\n  fps_limit: 60\n};\n","import React, { PureComponent } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthorized } from '../../reducers/auth';\nimport { IStore } from '../../types';\n\ninterface IPrivateRouteProps {\n  path: string;\n  isAuthorized: boolean;\n  component: React.ComponentType<any>;\n}\n\nexport class PrivateRoute extends PureComponent<IPrivateRouteProps> {\n  render() {\n    const { isAuthorized, component: Component, ...rest } = this.props;\n\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          isAuthorized ? <Component {...props} /> : <Redirect to=\"/\" />\n        }\n      />\n    );\n  }\n}\n\nexport default connect((state: IStore) => ({\n  isAuthorized: getIsAuthorized(state)\n}))(PrivateRoute);\n","import React, { Component } from 'react';\nimport { NavLink, RouteComponentProps } from 'react-router-dom';\nimport './Header.scss';\nimport headerLogo from '../images/Logo-white.svg';\nimport { logout } from '../../../actions/auth';\n\ninterface IHeaderProps {\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\n  currentPriceEth: number;\n  currentPriceBtc: number;\n  email: string;\n  logout: typeof logout;\n  url: string;\n}\n\nexport class Header extends Component<IHeaderProps> {\n  render() {\n    const { url } = this.props;\n    const { onClick, currentPriceEth, currentPriceBtc, email } = this.props;\n    return (\n      <header className=\"header\">\n        <div className=\"container container_header\">\n          <div className=\"header__item header__item_left\">\n            <div className=\"header__wrap\">\n              <img src={headerLogo} alt=\"logo\" className=\"header__logo\" />\n            </div>\n          </div>\n          <ul className=\"header__item header__item_currency\">\n            <li className=\"currency\">\n              <NavLink\n                onClick={onClick}\n                to={`${url}/btc`}\n                className=\"currency__link\"\n                id=\"btc-link\"\n                activeClassName=\"currency__link_active\"\n              >\n                <div className=\"currency__value\" id=\"btcCurrentValue\">\n                  {this.roundPrices(currentPriceBtc)}\n                </div>\n                <div className=\"currency__type\">1 BTC</div>\n              </NavLink>\n            </li>\n            <li className=\"currency\">\n              <NavLink\n                onClick={onClick}\n                to={`${url}/eth`}\n                className=\"currency__link\"\n                id=\"eth-link\"\n                activeClassName=\"currency__link_active\"\n              >\n                <div className=\"currency__value\" id=\"ethCurrentValue\">\n                  {this.roundPrices(currentPriceEth)}\n                </div>\n                <div className=\"currency__type\">1 ETH</div>\n              </NavLink>\n            </li>\n          </ul>\n          <ul className=\"header__item header__item_right\">\n            <li className=\"header__userInfo header__userInfo_email\">{email}</li>\n            <li\n              className=\"header__userInfo header__userInfo_logout header__userInfo_clickable\"\n              onClick={this.handleClick}\n            >\n              Logout\n            </li>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    const { logout } = this.props;\n    logout();\n  };\n\n  roundPrices = (price: number) => (price ? price.toFixed(1) : price);\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport './Footer.scss';\nimport footerLogo from '../images/Logo-white.svg';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"container container__footer\">\n        <div className=\"footer__item footer__item_right\">\n          <div className=\"footer__wrap\">\n            <img src={footerLogo} alt=\"logo\" className=\"footer__logo\" />\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport { LineChart } from 'react-chartkick';\nimport './Chart.scss';\nimport Spinner from 'react-svg-spinner';\nimport { exchange } from '../../../../types';\n\ninterface IChart {\n  chartWidth: string;\n  chartHeight: string;\n  isDataLoaded: boolean;\n  min: string;\n  max: string;\n  purchase: exchange[];\n  sell: exchange[];\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport default function Chart(props: IChart) {\n  const {\n    chartWidth,\n    chartHeight,\n    isDataLoaded,\n    min,\n    max,\n    purchase,\n    sell,\n    onClick\n  } = props;\n  return (\n    <React.Fragment>\n      <h2 className=\"title chart_title\">Окно графика</h2>\n      <ul className=\"chart__buttons\">\n        <li\n          className=\"chart__button chart__button_active\"\n          data-value=\"2h\"\n          onClick={onClick}\n        >\n          2ч\n        </li>\n        <li className=\"chart__button\" data-value=\"4h\" onClick={onClick}>\n          4ч\n        </li>\n        <li className=\"chart__button\" data-value=\"8h\" onClick={onClick}>\n          8ч\n        </li>\n        <li className=\"chart__button\" data-value=\"1d\" onClick={onClick}>\n          1д\n        </li>\n        <li className=\"chart__button\" data-value=\"7d\" onClick={onClick}>\n          7д\n        </li>\n      </ul>\n      <div className=\"chart__wrap\">\n        {!isDataLoaded ? (\n          <div className=\"chart__spinner\">\n            <Spinner size=\"64px\" color=\"#555658\" gap={5} />\n          </div>\n        ) : null}\n        <div\n          className={isDataLoaded ? 'chart__content' : 'chart__content_hidden'}\n        >\n          <LineChart\n            data={[\n              {\n                name: 'Продажа',\n                data: sell\n              },\n              {\n                name: 'Покупка',\n                data: purchase\n              }\n            ]}\n            min={min}\n            max={max}\n            legend={'bottom'}\n            width={chartWidth}\n            height={chartHeight}\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from 'react';\nimport Chart from './Chart';\nimport './ChartSection.scss';\nimport rotateIcon from './rotateIcon.svg';\nimport { ICurrency } from '../../../types';\nimport { selectBtc, selectEth } from '../../../actions/currency';\n\ninterface IChartSectionState {\n  isDataLoaded: boolean;\n  windowWidth: number;\n  phoneOrientation: 'portrait' | null;\n}\n\ninterface IChartSectionProps {\n  data: ICurrency;\n  isLoaded: boolean;\n  select: typeof selectBtc | typeof selectEth;\n  onClick: (e: React.MouseEvent<HTMLElement>) => void;\n}\n\nexport class ChartSection extends Component<\n  IChartSectionProps,\n  IChartSectionState\n> {\n  state = {\n    isDataLoaded: true,\n    windowWidth: 768,\n    phoneOrientation: null\n  };\n\n  componentDidMount() {\n    const { select } = this.props;\n    select();\n\n    window.addEventListener('resize', this.checkWidth);\n    window.addEventListener('resize', this.checkPhoneOrientation);\n    this.checkWidth();\n    this.checkPhoneOrientation();\n  }\n\n  componentWillReceiveProps(nextProps: IChartSectionProps) {\n    const { isLoaded } = nextProps;\n    if (isLoaded) {\n      this.setState({ isDataLoaded: true });\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.checkWidth);\n    window.removeEventListener('resize', this.checkPhoneOrientation);\n  }\n\n  render() {\n    const { min, max, purchase, sell } = this.props.data;\n    const { isDataLoaded, windowWidth, phoneOrientation } = this.state;\n    const chartWidth = windowWidth * 0.95 + 'px';\n    const chartHeight = windowWidth * 0.95 * 0.56 + 'px';\n\n    return (\n      <div className=\"chart\">\n        {phoneOrientation === 'portrait' ? (\n          <img\n            className=\"rotate-icon\"\n            src={rotateIcon}\n            alt=\"Поверните телефон в альбомную ориентацию\"\n          />\n        ) : (\n          <Chart\n            {...{\n              chartWidth,\n              chartHeight,\n              isDataLoaded,\n              phoneOrientation,\n              min,\n              max,\n              purchase,\n              sell,\n              onClick: this.handleClick\n            }}\n          />\n        )}\n        <br />\n      </div>\n    );\n  }\n\n  handleClick = (e: React.MouseEvent<HTMLElement>): void => {\n    const { onClick } = this.props;\n    this.setState({ isDataLoaded: false });\n    onClick(e);\n  };\n\n  checkPhoneOrientation = () => {\n    const width = document.documentElement.clientWidth;\n    const { phoneOrientation } = this.state;\n    if (\n      width < 480 &&\n      window.matchMedia('(orientation: portrait)').matches &&\n      !phoneOrientation\n    ) {\n      this.setState({ phoneOrientation: 'portrait' });\n    }\n    if (phoneOrientation && width >= 480) {\n      this.setState({ phoneOrientation: null });\n    }\n  };\n\n  checkWidth = () => {\n    const width = document.documentElement.clientWidth;\n    const { windowWidth } = this.state;\n    if (width <= 768) {\n      this.setState({ windowWidth: width });\n    }\n\n    if (width > 768 && windowWidth < 768) {\n      this.setState({ windowWidth: 768 });\n    }\n  };\n}\n\nexport default ChartSection;\n","import React, { Component } from 'react';\nimport { wallet } from '../types';\nimport './Account.scss';\n\ninterface IAccountProps {\n  usd: wallet;\n  btc: wallet;\n  eth: wallet;\n}\n\nexport default function Account(props: IAccountProps) {\n  const { usd, btc, eth } = props;\n  return (\n    <div className=\"account\">\n      <h2 className=\"title account_title\">Ваш счет</h2>\n      <ul className=\"account__list\">\n        <li className=\"account__item\">\n          <div className=\"value\">\n            <span className=\"value__integer\">{btc[0]}</span>\n            <span className=\"value__dot\">.</span>\n            <span className=\"value__fraction\">{btc[1]}</span>\n          </div>\n          <div className=\"account__currency\">BTC</div>\n        </li>\n        <li className=\"account__item\">\n          <div className=\"value\">\n            <span className=\"value__integer\">{eth[0]}</span>\n            <span className=\"value__dot\">.</span>\n            <span className=\"value__fraction\">{eth[1]}</span>\n          </div>\n          <div className=\"account__currency\">ETH</div>\n        </li>\n        <li className=\"account__item\">\n          <div className=\"value\">\n            <span className=\"value__integer\">{usd[0]}</span>\n            <span className=\"value__dot\">.</span>\n            <span className=\"value__fraction\">{usd[1]}</span>\n          </div>\n          <div className=\"account__currency\">$</div>\n        </li>\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getSelected, getBtc, getEth } from '../../../reducers/currency';\nimport { getErrorBuy, getErrorSell } from '../../../reducers/user';\nimport {\n  sellCurrencyRequest,\n  buyCurrencyRequest\n} from '../../../actions/trade';\nimport './TradeControls.scss';\nimport { ICurrency, IStore } from '../../../types';\n\ninterface ITradeControlsProps {\n  selected: string;\n  errorSell: string | boolean;\n  errorBuy: string | boolean;\n  sellCurrencyRequest: typeof sellCurrencyRequest;\n  buyCurrencyRequest: typeof buyCurrencyRequest;\n  btc: ICurrency;\n  eth: ICurrency;\n}\n\ninterface ITradeControlsState {\n  resultValue: string;\n  inputError: string | boolean;\n  currencyInputError: string | boolean;\n  sellInputError: string | boolean;\n  purchaseInputError: string | boolean;\n  sellCost: string;\n  purchaseCost: string;\n}\n\nexport class TradeControls extends Component<\n  ITradeControlsProps,\n  ITradeControlsState\n> {\n  state = {\n    resultValue: '',\n    inputError: false,\n    currencyInputError: false,\n    sellInputError: false,\n    purchaseInputError: false,\n    sellCost: '',\n    purchaseCost: ''\n  };\n\n  componentWillReceiveProps(nextProps: ITradeControlsProps) {\n    const { resultValue, inputError } = this.state;\n    const { selected } = this.props;\n    const newSelected = nextProps.selected;\n    if (selected !== nextProps.selected && !inputError) {\n      this.setState({\n        ...this.state,\n        sellCost: this.getCurrencyPrice(resultValue, newSelected, 'sell'),\n        purchaseCost: this.getCurrencyPrice(\n          resultValue,\n          newSelected,\n          'purchase'\n        )\n      });\n    }\n  }\n\n  render() {\n    const { selected, errorSell, errorBuy } = this.props;\n    const {\n      resultValue,\n      sellCost,\n      purchaseCost,\n      inputError,\n      currencyInputError,\n      sellInputError,\n      purchaseInputError\n    } = this.state;\n    return (\n      <div className=\"controls\">\n        <h2 className=\"title controls_title\">Покупка / продажа</h2>\n        {inputError ? (\n          <div className=\"controls__error\">{inputError}</div>\n        ) : (\n          false\n        )}\n        {errorSell || errorBuy ? (\n          <div className=\"controls__error controls__error_trade\">\n            Недостаточно средств\n          </div>\n        ) : (\n          false\n        )}\n        <ul className=\"controls__list\">\n          <li className=\"control\">\n            <div className=\"control__wrap\">\n              <div className=\"input\">\n                <input\n                  maxLength={18}\n                  type=\"text\"\n                  className={\n                    'input__value input__value_btc' +\n                    (currencyInputError ? ' input__value_error' : '')\n                  }\n                  value={resultValue}\n                  id=\"currency\"\n                  onChange={this.handleInputChange}\n                  onBlur={this.handleInputBlur}\n                />\n                <span className=\"input__type\">{selected.toUpperCase()}</span>\n              </div>\n            </div>\n          </li>\n          <li className=\"control\">\n            <div className=\"control__wrap\">\n              <div className=\"input\">\n                <input\n                  maxLength={18}\n                  type=\"text\"\n                  className={\n                    'input__value input__value_btc' +\n                    (purchaseInputError ? ' input__value_error' : '')\n                  }\n                  value={purchaseCost}\n                  id=\"purchase\"\n                  onChange={this.handleInputChange}\n                  onBlur={this.handleInputBlur}\n                />\n                <span className=\"input__type\">$</span>\n              </div>\n              <button\n                type=\"button\"\n                className=\"control__button control__button_sell\"\n                onClick={this.handleClick}\n              >\n                Продать\n              </button>\n            </div>\n          </li>\n          <li className=\"control\">\n            <div className=\"control__wrap\">\n              <div className=\"input\">\n                <input\n                  maxLength={18}\n                  type=\"text\"\n                  className={\n                    'input__value input__value_btc' +\n                    (sellInputError ? ' input__value_error' : '')\n                  }\n                  value={sellCost}\n                  id=\"sell\"\n                  onChange={this.handleInputChange}\n                  onBlur={this.handleInputBlur}\n                />\n                <span className=\"input__type\">$</span>\n              </div>\n              <button\n                type=\"button\"\n                className=\"control__button control__button_buy\"\n                onClick={this.handleClick}\n              >\n                Купить\n              </button>\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n\n  handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { selected } = this.props;\n    const value = e.target.value;\n    const targetId = e.target.getAttribute('id');\n    let targetKey: 'resultValue' | 'sellCost' | 'purchaseCost';\n    let firstRelatedKey: 'resultValue' | 'sellCost';\n    let secondRelatedKey: 'purchaseCost' | 'sellCost';\n    let firstRelatedValue: string;\n    let secondRelatedValue: string;\n\n    switch (targetId) {\n      case 'currency':\n        targetKey = 'resultValue';\n        firstRelatedKey = 'sellCost';\n        secondRelatedKey = 'purchaseCost';\n        firstRelatedValue = this.getCurrencyPrice(value, selected, 'sell');\n        secondRelatedValue = this.getCurrencyPrice(value, selected, 'purchase');\n        break;\n      case 'sell':\n        targetKey = 'sellCost';\n        firstRelatedKey = 'resultValue';\n        secondRelatedKey = 'purchaseCost';\n        firstRelatedValue = this.getCurrencyValue(value, selected, targetId);\n        secondRelatedValue = this.getCurrencyPrice(\n          firstRelatedValue,\n          selected,\n          'purchase'\n        );\n        break;\n      case 'purchase':\n        targetKey = 'purchaseCost';\n        firstRelatedKey = 'resultValue';\n        secondRelatedKey = 'sellCost';\n        firstRelatedValue = this.getCurrencyValue(value, selected, targetId);\n        secondRelatedValue = this.getCurrencyPrice(\n          firstRelatedValue,\n          selected,\n          'sell'\n        );\n        break;\n      default:\n        return;\n    }\n\n    this.setState({ ...this.state, [targetKey]: value }, () => {\n      if (/^([0-9]*[.])?[0-9]+$/.test(value) || value === '') {\n        this.setState({\n          ...this.state,\n          [firstRelatedKey]: firstRelatedValue,\n          [secondRelatedKey]: secondRelatedValue,\n          inputError: false,\n          currencyInputError: false,\n          sellInputError: false,\n          purchaseInputError: false\n        });\n      }\n    });\n  };\n\n  handleInputBlur = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    const targetId = e.target.getAttribute('id');\n    let errorType:\n      | 'currencyInputError'\n      | 'sellInputError'\n      | 'purchaseInputError';\n\n    switch (targetId) {\n      case 'currency':\n        errorType = 'currencyInputError';\n        break;\n      case 'sell':\n        errorType = 'sellInputError';\n        break;\n      case 'purchase':\n        errorType = 'purchaseInputError';\n        break;\n      default:\n        return;\n    }\n\n    if (!/^([0-9]*[.])?[0-9]+$/.test(value) && value !== '') {\n      this.setState({\n        ...this.state,\n        inputError: 'Введите положительное число',\n        [errorType]: true\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        inputError: false,\n        [errorType]: false\n      });\n    }\n  };\n\n  handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    const { resultValue, inputError } = this.state;\n    const { selected, sellCurrencyRequest, buyCurrencyRequest } = this.props;\n    const payload = { currency: selected, value: resultValue };\n    if (inputError || !resultValue) return;\n\n    if (e.target.classList.contains('control__button_sell')) {\n      sellCurrencyRequest(payload);\n    } else {\n      buyCurrencyRequest(payload);\n    }\n  };\n\n  getCurrencyPrice = (\n    value: string,\n    typeOfValue: string,\n    typeOfAction: 'sell' | 'purchase'\n  ) => {\n    const { btc, eth } = this.props;\n\n    if (!value || !btc.currentSellPrice || !eth.currentSellPrice) {\n      return '';\n    }\n\n    if (typeOfAction !== 'sell' && typeOfAction !== 'purchase') {\n      throw new Error('Введен неверный тип транзакции');\n    }\n    const numericValue = Number(value);\n    switch (typeOfValue) {\n      case 'btc':\n        return typeOfAction === 'sell'\n          ? (numericValue * btc.currentSellPrice).toFixed(2)\n          : (numericValue * btc.currentPurchasePrice).toFixed(2);\n      case 'eth':\n        return typeOfAction === 'sell'\n          ? (numericValue * eth.currentSellPrice).toFixed(2)\n          : (numericValue * eth.currentPurchasePrice).toFixed(2);\n      default:\n        throw new Error('Введен неверный тип валюты');\n    }\n  };\n\n  getCurrencyValue = (\n    value: string,\n    typeOfValue: string,\n    typeOfAction: 'sell' | 'purchase'\n  ) => {\n    const { btc, eth } = this.props;\n    if (!value) return '';\n\n    if (typeOfAction !== 'sell' && typeOfAction !== 'purchase') {\n      throw new Error('Введен неверный тип транзакции');\n    }\n    const numericValue = Number(value);\n    switch (typeOfValue) {\n      case 'btc':\n        return typeOfAction === 'sell'\n          ? (numericValue / btc.currentSellPrice).toFixed(4)\n          : (numericValue / btc.currentPurchasePrice).toFixed(4);\n      case 'eth':\n        return typeOfAction === 'sell'\n          ? (numericValue / eth.currentSellPrice).toFixed(4)\n          : (numericValue / eth.currentPurchasePrice).toFixed(4);\n      default:\n        throw new Error('Введен неверный тип валюты');\n    }\n  };\n}\n\nconst mapStateToProps = (state: IStore) => ({\n  selected: getSelected(state),\n  btc: getBtc(state),\n  eth: getEth(state),\n  errorSell: getErrorSell(state),\n  errorBuy: getErrorBuy(state)\n});\nconst mapDispatchToProps = {\n  sellCurrencyRequest,\n  buyCurrencyRequest\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TradeControls);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, RouteComponentProps } from 'react-router-dom';\nimport Header from './Header';\nimport Footer from './Footer';\nimport ChartSection from './ChartSection';\nimport Account from './Account';\nimport TradeControls from './TradeControls';\nimport './MainPage.scss';\nimport {\n  getBtc,\n  getEth,\n  getBtcLoadingState,\n  getEthLoadingState\n} from '../../reducers/currency';\nimport {\n  getUserEmail,\n  getParsedUsd,\n  getParsedBtc,\n  getParsedEth\n} from '../../reducers/user';\nimport { logout } from '../../actions/auth';\nimport { selectBtc, selectEth, selectOffset } from '../../actions/currency';\nimport { IMainPageBaseProps } from './types';\nimport { IStore } from '../../types';\n\ninterface IMainPageProps extends IMainPageBaseProps {\n  selectBtc: typeof selectBtc;\n  selectEth: typeof selectEth;\n  selectOffset: typeof selectOffset;\n  logout: typeof logout;\n}\n\nexport class MainPage extends Component<\n  RouteComponentProps<{ url: string }> & IMainPageProps\n> {\n  render() {\n    const { url } = this.props.match;\n    const {\n      btc,\n      eth,\n      btcLoadingState: { isLoaded: isBtcLoaded },\n      ethLoadingState: { isLoaded: isEthLoaded },\n      userEmail,\n      usdWallet,\n      btcWallet,\n      ethWallet,\n      selectBtc,\n      selectEth,\n      logout\n    } = this.props;\n    const currentPriceBtc = btc.currentSellPrice;\n    const currentPriceEth = eth.currentSellPrice;\n\n    return (\n      <div className=\"mainPage\">\n        <Header\n          url={this.props.match.url}\n          onClick={this.handleCurrencyClick}\n          currentPriceBtc={currentPriceBtc}\n          currentPriceEth={currentPriceEth}\n          email={userEmail}\n          logout={logout}\n        />\n        <main className=\"content\">\n          <div className=\"wrapper\">\n            <div className=\"container container_content\">\n              <section className=\"trade\">\n                <Account usd={usdWallet} btc={btcWallet} eth={ethWallet} />\n                <TradeControls />\n              </section>\n              <section className=\"data\">\n                <Switch>\n                  <Route\n                    path={`${url}/btc`}\n                    exact\n                    render={props => (\n                      <ChartSection\n                        onClick={this.handleOffsetClick}\n                        data={btc}\n                        isLoaded={isBtcLoaded}\n                        {...props}\n                        select={selectBtc}\n                      />\n                    )}\n                  />\n                  <Route\n                    path={`${url}/eth`}\n                    exact\n                    render={props => (\n                      <ChartSection\n                        onClick={this.handleOffsetClick}\n                        data={eth}\n                        isLoaded={isEthLoaded}\n                        {...props}\n                        select={selectEth}\n                      />\n                    )}\n                  />\n                </Switch>\n              </section>\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </div>\n    );\n  }\n\n  handleCurrencyClick = (e: React.MouseEvent<HTMLElement>): void => {\n    const { selectBtc, selectEth } = this.props;\n    const elementId = e.currentTarget.getAttribute('id');\n    if (elementId === 'btc-link') {\n      selectBtc();\n    } else {\n      selectEth();\n    }\n  };\n\n  handleOffsetClick = (e: React.MouseEvent<HTMLElement>): void => {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n    const { selectOffset } = this.props;\n    const value = e.target.dataset.value;\n    const elements = document.querySelectorAll('[data-value]');\n    if (value) {\n      selectOffset(value);\n      for (let i = 0; i < elements.length; i++) {\n        if (elements[i].classList.contains('chart__button_active')) {\n          elements[i].classList.remove('chart__button_active');\n        }\n      }\n      e.target.classList.add('chart__button_active');\n    }\n  };\n}\n\nconst mapStateToProps = (state: IStore) => ({\n  btc: getBtc(state),\n  eth: getEth(state),\n  btcLoadingState: getBtcLoadingState(state),\n  ethLoadingState: getEthLoadingState(state),\n  userEmail: getUserEmail(state),\n  usdWallet: getParsedUsd(state),\n  btcWallet: getParsedBtc(state),\n  ethWallet: getParsedEth(state)\n});\nconst mapDispatchToProps = {\n  selectBtc,\n  selectEth,\n  selectOffset,\n  logout\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPage);\n","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport './AppRouter.scss';\n\nimport AuthPage from '../AuthPage';\nimport PrivateRoute from '../PrivateRoute';\nimport MainPage from '../MainPage';\n\nexport class AppRouter extends Component {\n  render() {\n    return (\n      <div className=\"AppRouter\">\n        <Switch>\n          <Route path=\"/\" exact component={AuthPage} />\n          <PrivateRoute path=\"/trade\" component={MainPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.scss';\nimport './static/styles/font.scss';\nimport './static/styles/main.scss';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport createStore from './store';\nimport AppRouter from './components/AppRouter';\n\ndeclare global {\n  interface Window {\n    Chart: Chart;\n  }\n}\n\nwindow.Chart = require('chart.js');\n\nconst store = createStore();\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/Logo-white.2695e6d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/Logo.4d8cc196.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-shape.0d58b18f.svg\";","module.exports = __webpack_public_path__ + \"static/media/padlock-unlock.d8495930.svg\";","module.exports = __webpack_public_path__ + \"static/media/rotateIcon.c71a7ec9.svg\";"],"sourceRoot":""}